////
//// WARNING: This file is autogenerated. Modifications to this file will not persist.
////
//// You can run `gleam run -m codegen` to update it if you think there are entities missing.
////
//// Data sourced from https://html.spec.whatwg.org/entities.json
////

import gleam/list
import gleam/string

pub fn match_html_entity(
  input: List(String),
) -> Result(#(List(String), String), Nil) {
  let entity = input |> list.take(40) |> string.join("")
  case list.first(input) {
    Ok("A") -> match_upper_a
    Ok("B") -> match_upper_b
    Ok("C") -> match_upper_c
    Ok("D") -> match_upper_d
    Ok("E") -> match_upper_e
    Ok("F") -> match_upper_f
    Ok("G") -> match_upper_g
    Ok("H") -> match_upper_h
    Ok("I") -> match_upper_i
    Ok("J") -> match_upper_j
    Ok("K") -> match_upper_k
    Ok("L") -> match_upper_l
    Ok("M") -> match_upper_m
    Ok("N") -> match_upper_n
    Ok("O") -> match_upper_o
    Ok("P") -> match_upper_p
    Ok("Q") -> match_upper_q
    Ok("R") -> match_upper_r
    Ok("S") -> match_upper_s
    Ok("T") -> match_upper_t
    Ok("U") -> match_upper_u
    Ok("V") -> match_upper_v
    Ok("W") -> match_upper_w
    Ok("X") -> match_upper_x
    Ok("Y") -> match_upper_y
    Ok("Z") -> match_upper_z
    Ok("a") -> match_a
    Ok("b") -> match_b
    Ok("c") -> match_c
    Ok("d") -> match_d
    Ok("e") -> match_e
    Ok("f") -> match_f
    Ok("g") -> match_g
    Ok("h") -> match_h
    Ok("i") -> match_i
    Ok("j") -> match_j
    Ok("k") -> match_k
    Ok("l") -> match_l
    Ok("m") -> match_m
    Ok("n") -> match_n
    Ok("o") -> match_o
    Ok("p") -> match_p
    Ok("q") -> match_q
    Ok("r") -> match_r
    Ok("s") -> match_s
    Ok("t") -> match_t
    Ok("u") -> match_u
    Ok("v") -> match_v
    Ok("w") -> match_w
    Ok("x") -> match_x
    Ok("y") -> match_y
    Ok("z") -> match_z
    _ -> fn(_, _) { Error(Nil) }
  }(entity, input)
}

fn match_upper_a(entity: String, input: List(String)) {
  case entity {
    "AElig;" <> _ -> Ok(#(list.drop(input, 6), "\u{C6}"))
    "AMP;" <> _ -> Ok(#(list.drop(input, 4), "\u{26}"))
    "Aacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{C1}"))
    "Abreve;" <> _ -> Ok(#(list.drop(input, 7), "\u{102}"))
    "Acirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{C2}"))
    "Acy;" <> _ -> Ok(#(list.drop(input, 4), "\u{410}"))
    "Afr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D504}"))
    "Agrave;" <> _ -> Ok(#(list.drop(input, 7), "\u{C0}"))
    "Alpha;" <> _ -> Ok(#(list.drop(input, 6), "\u{391}"))
    "Amacr;" <> _ -> Ok(#(list.drop(input, 6), "\u{100}"))
    "And;" <> _ -> Ok(#(list.drop(input, 4), "\u{2A53}"))
    "Aogon;" <> _ -> Ok(#(list.drop(input, 6), "\u{104}"))
    "Aopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D538}"))
    "ApplyFunction;" <> _ -> Ok(#(list.drop(input, 14), "\u{2061}"))
    "Aring;" <> _ -> Ok(#(list.drop(input, 6), "\u{C5}"))
    "Ascr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D49C}"))
    "Assign;" <> _ -> Ok(#(list.drop(input, 7), "\u{2254}"))
    "Atilde;" <> _ -> Ok(#(list.drop(input, 7), "\u{C3}"))
    "Auml;" <> _ -> Ok(#(list.drop(input, 5), "\u{C4}"))
    _ -> Error(Nil)
  }
}

fn match_upper_b(entity: String, input: List(String)) {
  case entity {
    "Backslash;" <> _ -> Ok(#(list.drop(input, 10), "\u{2216}"))
    "Barv;" <> _ -> Ok(#(list.drop(input, 5), "\u{2AE7}"))
    "Barwed;" <> _ -> Ok(#(list.drop(input, 7), "\u{2306}"))
    "Bcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{411}"))
    "Because;" <> _ -> Ok(#(list.drop(input, 8), "\u{2235}"))
    "Bernoullis;" <> _ -> Ok(#(list.drop(input, 11), "\u{212C}"))
    "Beta;" <> _ -> Ok(#(list.drop(input, 5), "\u{392}"))
    "Bfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D505}"))
    "Bopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D539}"))
    "Breve;" <> _ -> Ok(#(list.drop(input, 6), "\u{2D8}"))
    "Bscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{212C}"))
    "Bumpeq;" <> _ -> Ok(#(list.drop(input, 7), "\u{224E}"))
    _ -> Error(Nil)
  }
}

fn match_upper_c(entity: String, input: List(String)) {
  case entity {
    "CHcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{427}"))
    "COPY;" <> _ -> Ok(#(list.drop(input, 5), "\u{A9}"))
    "Cacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{106}"))
    "Cap;" <> _ -> Ok(#(list.drop(input, 4), "\u{22D2}"))
    "CapitalDifferentialD;" <> _ -> Ok(#(list.drop(input, 21), "\u{2145}"))
    "Cayleys;" <> _ -> Ok(#(list.drop(input, 8), "\u{212D}"))
    "Ccaron;" <> _ -> Ok(#(list.drop(input, 7), "\u{10C}"))
    "Ccedil;" <> _ -> Ok(#(list.drop(input, 7), "\u{C7}"))
    "Ccirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{108}"))
    "Cconint;" <> _ -> Ok(#(list.drop(input, 8), "\u{2230}"))
    "Cdot;" <> _ -> Ok(#(list.drop(input, 5), "\u{10A}"))
    "Cedilla;" <> _ -> Ok(#(list.drop(input, 8), "\u{B8}"))
    "CenterDot;" <> _ -> Ok(#(list.drop(input, 10), "\u{B7}"))
    "Cfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{212D}"))
    "Chi;" <> _ -> Ok(#(list.drop(input, 4), "\u{3A7}"))
    "CircleDot;" <> _ -> Ok(#(list.drop(input, 10), "\u{2299}"))
    "CircleMinus;" <> _ -> Ok(#(list.drop(input, 12), "\u{2296}"))
    "CirclePlus;" <> _ -> Ok(#(list.drop(input, 11), "\u{2295}"))
    "CircleTimes;" <> _ -> Ok(#(list.drop(input, 12), "\u{2297}"))
    "ClockwiseContourIntegral;" <> _ -> Ok(#(list.drop(input, 25), "\u{2232}"))
    "CloseCurlyDoubleQuote;" <> _ -> Ok(#(list.drop(input, 22), "\u{201D}"))
    "CloseCurlyQuote;" <> _ -> Ok(#(list.drop(input, 16), "\u{2019}"))
    "Colon;" <> _ -> Ok(#(list.drop(input, 6), "\u{2237}"))
    "Colone;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A74}"))
    "Congruent;" <> _ -> Ok(#(list.drop(input, 10), "\u{2261}"))
    "Conint;" <> _ -> Ok(#(list.drop(input, 7), "\u{222F}"))
    "ContourIntegral;" <> _ -> Ok(#(list.drop(input, 16), "\u{222E}"))
    "Copf;" <> _ -> Ok(#(list.drop(input, 5), "\u{2102}"))
    "Coproduct;" <> _ -> Ok(#(list.drop(input, 10), "\u{2210}"))
    "CounterClockwiseContourIntegral;" <> _ ->
      Ok(#(list.drop(input, 32), "\u{2233}"))
    "Cross;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A2F}"))
    "Cscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D49E}"))
    "Cup;" <> _ -> Ok(#(list.drop(input, 4), "\u{22D3}"))
    "CupCap;" <> _ -> Ok(#(list.drop(input, 7), "\u{224D}"))
    _ -> Error(Nil)
  }
}

fn match_upper_d(entity: String, input: List(String)) {
  case entity {
    "DD;" <> _ -> Ok(#(list.drop(input, 3), "\u{2145}"))
    "DDotrahd;" <> _ -> Ok(#(list.drop(input, 9), "\u{2911}"))
    "DJcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{402}"))
    "DScy;" <> _ -> Ok(#(list.drop(input, 5), "\u{405}"))
    "DZcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{40F}"))
    "Dagger;" <> _ -> Ok(#(list.drop(input, 7), "\u{2021}"))
    "Darr;" <> _ -> Ok(#(list.drop(input, 5), "\u{21A1}"))
    "Dashv;" <> _ -> Ok(#(list.drop(input, 6), "\u{2AE4}"))
    "Dcaron;" <> _ -> Ok(#(list.drop(input, 7), "\u{10E}"))
    "Dcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{414}"))
    "Del;" <> _ -> Ok(#(list.drop(input, 4), "\u{2207}"))
    "Delta;" <> _ -> Ok(#(list.drop(input, 6), "\u{394}"))
    "Dfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D507}"))
    "DiacriticalAcute;" <> _ -> Ok(#(list.drop(input, 17), "\u{B4}"))
    "DiacriticalDot;" <> _ -> Ok(#(list.drop(input, 15), "\u{2D9}"))
    "DiacriticalDoubleAcute;" <> _ -> Ok(#(list.drop(input, 23), "\u{2DD}"))
    "DiacriticalGrave;" <> _ -> Ok(#(list.drop(input, 17), "\u{60}"))
    "DiacriticalTilde;" <> _ -> Ok(#(list.drop(input, 17), "\u{2DC}"))
    "Diamond;" <> _ -> Ok(#(list.drop(input, 8), "\u{22C4}"))
    "DifferentialD;" <> _ -> Ok(#(list.drop(input, 14), "\u{2146}"))
    "Dopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D53B}"))
    "Dot;" <> _ -> Ok(#(list.drop(input, 4), "\u{A8}"))
    "DotDot;" <> _ -> Ok(#(list.drop(input, 7), "\u{20DC}"))
    "DotEqual;" <> _ -> Ok(#(list.drop(input, 9), "\u{2250}"))
    "DoubleContourIntegral;" <> _ -> Ok(#(list.drop(input, 22), "\u{222F}"))
    "DoubleDot;" <> _ -> Ok(#(list.drop(input, 10), "\u{A8}"))
    "DoubleDownArrow;" <> _ -> Ok(#(list.drop(input, 16), "\u{21D3}"))
    "DoubleLeftArrow;" <> _ -> Ok(#(list.drop(input, 16), "\u{21D0}"))
    "DoubleLeftRightArrow;" <> _ -> Ok(#(list.drop(input, 21), "\u{21D4}"))
    "DoubleLeftTee;" <> _ -> Ok(#(list.drop(input, 14), "\u{2AE4}"))
    "DoubleLongLeftArrow;" <> _ -> Ok(#(list.drop(input, 20), "\u{27F8}"))
    "DoubleLongLeftRightArrow;" <> _ -> Ok(#(list.drop(input, 25), "\u{27FA}"))
    "DoubleLongRightArrow;" <> _ -> Ok(#(list.drop(input, 21), "\u{27F9}"))
    "DoubleRightArrow;" <> _ -> Ok(#(list.drop(input, 17), "\u{21D2}"))
    "DoubleRightTee;" <> _ -> Ok(#(list.drop(input, 15), "\u{22A8}"))
    "DoubleUpArrow;" <> _ -> Ok(#(list.drop(input, 14), "\u{21D1}"))
    "DoubleUpDownArrow;" <> _ -> Ok(#(list.drop(input, 18), "\u{21D5}"))
    "DoubleVerticalBar;" <> _ -> Ok(#(list.drop(input, 18), "\u{2225}"))
    "DownArrow;" <> _ -> Ok(#(list.drop(input, 10), "\u{2193}"))
    "DownArrowBar;" <> _ -> Ok(#(list.drop(input, 13), "\u{2913}"))
    "DownArrowUpArrow;" <> _ -> Ok(#(list.drop(input, 17), "\u{21F5}"))
    "DownBreve;" <> _ -> Ok(#(list.drop(input, 10), "\u{311}"))
    "DownLeftRightVector;" <> _ -> Ok(#(list.drop(input, 20), "\u{2950}"))
    "DownLeftTeeVector;" <> _ -> Ok(#(list.drop(input, 18), "\u{295E}"))
    "DownLeftVector;" <> _ -> Ok(#(list.drop(input, 15), "\u{21BD}"))
    "DownLeftVectorBar;" <> _ -> Ok(#(list.drop(input, 18), "\u{2956}"))
    "DownRightTeeVector;" <> _ -> Ok(#(list.drop(input, 19), "\u{295F}"))
    "DownRightVector;" <> _ -> Ok(#(list.drop(input, 16), "\u{21C1}"))
    "DownRightVectorBar;" <> _ -> Ok(#(list.drop(input, 19), "\u{2957}"))
    "DownTee;" <> _ -> Ok(#(list.drop(input, 8), "\u{22A4}"))
    "DownTeeArrow;" <> _ -> Ok(#(list.drop(input, 13), "\u{21A7}"))
    "Downarrow;" <> _ -> Ok(#(list.drop(input, 10), "\u{21D3}"))
    "Dscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D49F}"))
    "Dstrok;" <> _ -> Ok(#(list.drop(input, 7), "\u{110}"))
    _ -> Error(Nil)
  }
}

fn match_upper_e(entity: String, input: List(String)) {
  case entity {
    "ENG;" <> _ -> Ok(#(list.drop(input, 4), "\u{14A}"))
    "ETH;" <> _ -> Ok(#(list.drop(input, 4), "\u{D0}"))
    "Eacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{C9}"))
    "Ecaron;" <> _ -> Ok(#(list.drop(input, 7), "\u{11A}"))
    "Ecirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{CA}"))
    "Ecy;" <> _ -> Ok(#(list.drop(input, 4), "\u{42D}"))
    "Edot;" <> _ -> Ok(#(list.drop(input, 5), "\u{116}"))
    "Efr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D508}"))
    "Egrave;" <> _ -> Ok(#(list.drop(input, 7), "\u{C8}"))
    "Element;" <> _ -> Ok(#(list.drop(input, 8), "\u{2208}"))
    "Emacr;" <> _ -> Ok(#(list.drop(input, 6), "\u{112}"))
    "EmptySmallSquare;" <> _ -> Ok(#(list.drop(input, 17), "\u{25FB}"))
    "EmptyVerySmallSquare;" <> _ -> Ok(#(list.drop(input, 21), "\u{25AB}"))
    "Eogon;" <> _ -> Ok(#(list.drop(input, 6), "\u{118}"))
    "Eopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D53C}"))
    "Epsilon;" <> _ -> Ok(#(list.drop(input, 8), "\u{395}"))
    "Equal;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A75}"))
    "EqualTilde;" <> _ -> Ok(#(list.drop(input, 11), "\u{2242}"))
    "Equilibrium;" <> _ -> Ok(#(list.drop(input, 12), "\u{21CC}"))
    "Escr;" <> _ -> Ok(#(list.drop(input, 5), "\u{2130}"))
    "Esim;" <> _ -> Ok(#(list.drop(input, 5), "\u{2A73}"))
    "Eta;" <> _ -> Ok(#(list.drop(input, 4), "\u{397}"))
    "Euml;" <> _ -> Ok(#(list.drop(input, 5), "\u{CB}"))
    "Exists;" <> _ -> Ok(#(list.drop(input, 7), "\u{2203}"))
    "ExponentialE;" <> _ -> Ok(#(list.drop(input, 13), "\u{2147}"))
    _ -> Error(Nil)
  }
}

fn match_upper_f(entity: String, input: List(String)) {
  case entity {
    "Fcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{424}"))
    "Ffr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D509}"))
    "FilledSmallSquare;" <> _ -> Ok(#(list.drop(input, 18), "\u{25FC}"))
    "FilledVerySmallSquare;" <> _ -> Ok(#(list.drop(input, 22), "\u{25AA}"))
    "Fopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D53D}"))
    "ForAll;" <> _ -> Ok(#(list.drop(input, 7), "\u{2200}"))
    "Fouriertrf;" <> _ -> Ok(#(list.drop(input, 11), "\u{2131}"))
    "Fscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{2131}"))
    _ -> Error(Nil)
  }
}

fn match_upper_g(entity: String, input: List(String)) {
  case entity {
    "GJcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{403}"))
    "GT;" <> _ -> Ok(#(list.drop(input, 3), "\u{3E}"))
    "Gamma;" <> _ -> Ok(#(list.drop(input, 6), "\u{393}"))
    "Gammad;" <> _ -> Ok(#(list.drop(input, 7), "\u{3DC}"))
    "Gbreve;" <> _ -> Ok(#(list.drop(input, 7), "\u{11E}"))
    "Gcedil;" <> _ -> Ok(#(list.drop(input, 7), "\u{122}"))
    "Gcirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{11C}"))
    "Gcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{413}"))
    "Gdot;" <> _ -> Ok(#(list.drop(input, 5), "\u{120}"))
    "Gfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D50A}"))
    "Gg;" <> _ -> Ok(#(list.drop(input, 3), "\u{22D9}"))
    "Gopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D53E}"))
    "GreaterEqual;" <> _ -> Ok(#(list.drop(input, 13), "\u{2265}"))
    "GreaterEqualLess;" <> _ -> Ok(#(list.drop(input, 17), "\u{22DB}"))
    "GreaterFullEqual;" <> _ -> Ok(#(list.drop(input, 17), "\u{2267}"))
    "GreaterGreater;" <> _ -> Ok(#(list.drop(input, 15), "\u{2AA2}"))
    "GreaterLess;" <> _ -> Ok(#(list.drop(input, 12), "\u{2277}"))
    "GreaterSlantEqual;" <> _ -> Ok(#(list.drop(input, 18), "\u{2A7E}"))
    "GreaterTilde;" <> _ -> Ok(#(list.drop(input, 13), "\u{2273}"))
    "Gscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4A2}"))
    "Gt;" <> _ -> Ok(#(list.drop(input, 3), "\u{226B}"))
    _ -> Error(Nil)
  }
}

fn match_upper_h(entity: String, input: List(String)) {
  case entity {
    "HARDcy;" <> _ -> Ok(#(list.drop(input, 7), "\u{42A}"))
    "Hacek;" <> _ -> Ok(#(list.drop(input, 6), "\u{2C7}"))
    "Hat;" <> _ -> Ok(#(list.drop(input, 4), "\u{5E}"))
    "Hcirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{124}"))
    "Hfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{210C}"))
    "HilbertSpace;" <> _ -> Ok(#(list.drop(input, 13), "\u{210B}"))
    "Hopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{210D}"))
    "HorizontalLine;" <> _ -> Ok(#(list.drop(input, 15), "\u{2500}"))
    "Hscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{210B}"))
    "Hstrok;" <> _ -> Ok(#(list.drop(input, 7), "\u{126}"))
    "HumpDownHump;" <> _ -> Ok(#(list.drop(input, 13), "\u{224E}"))
    "HumpEqual;" <> _ -> Ok(#(list.drop(input, 10), "\u{224F}"))
    _ -> Error(Nil)
  }
}

fn match_upper_i(entity: String, input: List(String)) {
  case entity {
    "IEcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{415}"))
    "IJlig;" <> _ -> Ok(#(list.drop(input, 6), "\u{132}"))
    "IOcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{401}"))
    "Iacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{CD}"))
    "Icirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{CE}"))
    "Icy;" <> _ -> Ok(#(list.drop(input, 4), "\u{418}"))
    "Idot;" <> _ -> Ok(#(list.drop(input, 5), "\u{130}"))
    "Ifr;" <> _ -> Ok(#(list.drop(input, 4), "\u{2111}"))
    "Igrave;" <> _ -> Ok(#(list.drop(input, 7), "\u{CC}"))
    "Im;" <> _ -> Ok(#(list.drop(input, 3), "\u{2111}"))
    "Imacr;" <> _ -> Ok(#(list.drop(input, 6), "\u{12A}"))
    "ImaginaryI;" <> _ -> Ok(#(list.drop(input, 11), "\u{2148}"))
    "Implies;" <> _ -> Ok(#(list.drop(input, 8), "\u{21D2}"))
    "Int;" <> _ -> Ok(#(list.drop(input, 4), "\u{222C}"))
    "Integral;" <> _ -> Ok(#(list.drop(input, 9), "\u{222B}"))
    "Intersection;" <> _ -> Ok(#(list.drop(input, 13), "\u{22C2}"))
    "InvisibleComma;" <> _ -> Ok(#(list.drop(input, 15), "\u{2063}"))
    "InvisibleTimes;" <> _ -> Ok(#(list.drop(input, 15), "\u{2062}"))
    "Iogon;" <> _ -> Ok(#(list.drop(input, 6), "\u{12E}"))
    "Iopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D540}"))
    "Iota;" <> _ -> Ok(#(list.drop(input, 5), "\u{399}"))
    "Iscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{2110}"))
    "Itilde;" <> _ -> Ok(#(list.drop(input, 7), "\u{128}"))
    "Iukcy;" <> _ -> Ok(#(list.drop(input, 6), "\u{406}"))
    "Iuml;" <> _ -> Ok(#(list.drop(input, 5), "\u{CF}"))
    _ -> Error(Nil)
  }
}

fn match_upper_j(entity: String, input: List(String)) {
  case entity {
    "Jcirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{134}"))
    "Jcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{419}"))
    "Jfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D50D}"))
    "Jopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D541}"))
    "Jscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4A5}"))
    "Jsercy;" <> _ -> Ok(#(list.drop(input, 7), "\u{408}"))
    "Jukcy;" <> _ -> Ok(#(list.drop(input, 6), "\u{404}"))
    _ -> Error(Nil)
  }
}

fn match_upper_k(entity: String, input: List(String)) {
  case entity {
    "KHcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{425}"))
    "KJcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{40C}"))
    "Kappa;" <> _ -> Ok(#(list.drop(input, 6), "\u{39A}"))
    "Kcedil;" <> _ -> Ok(#(list.drop(input, 7), "\u{136}"))
    "Kcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{41A}"))
    "Kfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D50E}"))
    "Kopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D542}"))
    "Kscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4A6}"))
    _ -> Error(Nil)
  }
}

fn match_upper_l(entity: String, input: List(String)) {
  case entity {
    "LJcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{409}"))
    "LT;" <> _ -> Ok(#(list.drop(input, 3), "\u{3C}"))
    "Lacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{139}"))
    "Lambda;" <> _ -> Ok(#(list.drop(input, 7), "\u{39B}"))
    "Lang;" <> _ -> Ok(#(list.drop(input, 5), "\u{27EA}"))
    "Laplacetrf;" <> _ -> Ok(#(list.drop(input, 11), "\u{2112}"))
    "Larr;" <> _ -> Ok(#(list.drop(input, 5), "\u{219E}"))
    "Lcaron;" <> _ -> Ok(#(list.drop(input, 7), "\u{13D}"))
    "Lcedil;" <> _ -> Ok(#(list.drop(input, 7), "\u{13B}"))
    "Lcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{41B}"))
    "LeftAngleBracket;" <> _ -> Ok(#(list.drop(input, 17), "\u{27E8}"))
    "LeftArrow;" <> _ -> Ok(#(list.drop(input, 10), "\u{2190}"))
    "LeftArrowBar;" <> _ -> Ok(#(list.drop(input, 13), "\u{21E4}"))
    "LeftArrowRightArrow;" <> _ -> Ok(#(list.drop(input, 20), "\u{21C6}"))
    "LeftCeiling;" <> _ -> Ok(#(list.drop(input, 12), "\u{2308}"))
    "LeftDoubleBracket;" <> _ -> Ok(#(list.drop(input, 18), "\u{27E6}"))
    "LeftDownTeeVector;" <> _ -> Ok(#(list.drop(input, 18), "\u{2961}"))
    "LeftDownVector;" <> _ -> Ok(#(list.drop(input, 15), "\u{21C3}"))
    "LeftDownVectorBar;" <> _ -> Ok(#(list.drop(input, 18), "\u{2959}"))
    "LeftFloor;" <> _ -> Ok(#(list.drop(input, 10), "\u{230A}"))
    "LeftRightArrow;" <> _ -> Ok(#(list.drop(input, 15), "\u{2194}"))
    "LeftRightVector;" <> _ -> Ok(#(list.drop(input, 16), "\u{294E}"))
    "LeftTee;" <> _ -> Ok(#(list.drop(input, 8), "\u{22A3}"))
    "LeftTeeArrow;" <> _ -> Ok(#(list.drop(input, 13), "\u{21A4}"))
    "LeftTeeVector;" <> _ -> Ok(#(list.drop(input, 14), "\u{295A}"))
    "LeftTriangle;" <> _ -> Ok(#(list.drop(input, 13), "\u{22B2}"))
    "LeftTriangleBar;" <> _ -> Ok(#(list.drop(input, 16), "\u{29CF}"))
    "LeftTriangleEqual;" <> _ -> Ok(#(list.drop(input, 18), "\u{22B4}"))
    "LeftUpDownVector;" <> _ -> Ok(#(list.drop(input, 17), "\u{2951}"))
    "LeftUpTeeVector;" <> _ -> Ok(#(list.drop(input, 16), "\u{2960}"))
    "LeftUpVector;" <> _ -> Ok(#(list.drop(input, 13), "\u{21BF}"))
    "LeftUpVectorBar;" <> _ -> Ok(#(list.drop(input, 16), "\u{2958}"))
    "LeftVector;" <> _ -> Ok(#(list.drop(input, 11), "\u{21BC}"))
    "LeftVectorBar;" <> _ -> Ok(#(list.drop(input, 14), "\u{2952}"))
    "Leftarrow;" <> _ -> Ok(#(list.drop(input, 10), "\u{21D0}"))
    "Leftrightarrow;" <> _ -> Ok(#(list.drop(input, 15), "\u{21D4}"))
    "LessEqualGreater;" <> _ -> Ok(#(list.drop(input, 17), "\u{22DA}"))
    "LessFullEqual;" <> _ -> Ok(#(list.drop(input, 14), "\u{2266}"))
    "LessGreater;" <> _ -> Ok(#(list.drop(input, 12), "\u{2276}"))
    "LessLess;" <> _ -> Ok(#(list.drop(input, 9), "\u{2AA1}"))
    "LessSlantEqual;" <> _ -> Ok(#(list.drop(input, 15), "\u{2A7D}"))
    "LessTilde;" <> _ -> Ok(#(list.drop(input, 10), "\u{2272}"))
    "Lfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D50F}"))
    "Ll;" <> _ -> Ok(#(list.drop(input, 3), "\u{22D8}"))
    "Lleftarrow;" <> _ -> Ok(#(list.drop(input, 11), "\u{21DA}"))
    "Lmidot;" <> _ -> Ok(#(list.drop(input, 7), "\u{13F}"))
    "LongLeftArrow;" <> _ -> Ok(#(list.drop(input, 14), "\u{27F5}"))
    "LongLeftRightArrow;" <> _ -> Ok(#(list.drop(input, 19), "\u{27F7}"))
    "LongRightArrow;" <> _ -> Ok(#(list.drop(input, 15), "\u{27F6}"))
    "Longleftarrow;" <> _ -> Ok(#(list.drop(input, 14), "\u{27F8}"))
    "Longleftrightarrow;" <> _ -> Ok(#(list.drop(input, 19), "\u{27FA}"))
    "Longrightarrow;" <> _ -> Ok(#(list.drop(input, 15), "\u{27F9}"))
    "Lopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D543}"))
    "LowerLeftArrow;" <> _ -> Ok(#(list.drop(input, 15), "\u{2199}"))
    "LowerRightArrow;" <> _ -> Ok(#(list.drop(input, 16), "\u{2198}"))
    "Lscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{2112}"))
    "Lsh;" <> _ -> Ok(#(list.drop(input, 4), "\u{21B0}"))
    "Lstrok;" <> _ -> Ok(#(list.drop(input, 7), "\u{141}"))
    "Lt;" <> _ -> Ok(#(list.drop(input, 3), "\u{226A}"))
    _ -> Error(Nil)
  }
}

fn match_upper_m(entity: String, input: List(String)) {
  case entity {
    "Map;" <> _ -> Ok(#(list.drop(input, 4), "\u{2905}"))
    "Mcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{41C}"))
    "MediumSpace;" <> _ -> Ok(#(list.drop(input, 12), "\u{205F}"))
    "Mellintrf;" <> _ -> Ok(#(list.drop(input, 10), "\u{2133}"))
    "Mfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D510}"))
    "MinusPlus;" <> _ -> Ok(#(list.drop(input, 10), "\u{2213}"))
    "Mopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D544}"))
    "Mscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{2133}"))
    "Mu;" <> _ -> Ok(#(list.drop(input, 3), "\u{39C}"))
    _ -> Error(Nil)
  }
}

fn match_upper_n(entity: String, input: List(String)) {
  case entity {
    "NJcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{40A}"))
    "Nacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{143}"))
    "Ncaron;" <> _ -> Ok(#(list.drop(input, 7), "\u{147}"))
    "Ncedil;" <> _ -> Ok(#(list.drop(input, 7), "\u{145}"))
    "Ncy;" <> _ -> Ok(#(list.drop(input, 4), "\u{41D}"))
    "NegativeMediumSpace;" <> _ -> Ok(#(list.drop(input, 20), "\u{200B}"))
    "NegativeThickSpace;" <> _ -> Ok(#(list.drop(input, 19), "\u{200B}"))
    "NegativeThinSpace;" <> _ -> Ok(#(list.drop(input, 18), "\u{200B}"))
    "NegativeVeryThinSpace;" <> _ -> Ok(#(list.drop(input, 22), "\u{200B}"))
    "NestedGreaterGreater;" <> _ -> Ok(#(list.drop(input, 21), "\u{226B}"))
    "NestedLessLess;" <> _ -> Ok(#(list.drop(input, 15), "\u{226A}"))
    "NewLine;" <> _ -> Ok(#(list.drop(input, 8), "\u{A}"))
    "Nfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D511}"))
    "NoBreak;" <> _ -> Ok(#(list.drop(input, 8), "\u{2060}"))
    "NonBreakingSpace;" <> _ -> Ok(#(list.drop(input, 17), "\u{A0}"))
    "Nopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{2115}"))
    "Not;" <> _ -> Ok(#(list.drop(input, 4), "\u{2AEC}"))
    "NotCongruent;" <> _ -> Ok(#(list.drop(input, 13), "\u{2262}"))
    "NotCupCap;" <> _ -> Ok(#(list.drop(input, 10), "\u{226D}"))
    "NotDoubleVerticalBar;" <> _ -> Ok(#(list.drop(input, 21), "\u{2226}"))
    "NotElement;" <> _ -> Ok(#(list.drop(input, 11), "\u{2209}"))
    "NotEqual;" <> _ -> Ok(#(list.drop(input, 9), "\u{2260}"))
    "NotEqualTilde;" <> _ -> Ok(#(list.drop(input, 14), "\u{2242}\u{338}"))
    "NotExists;" <> _ -> Ok(#(list.drop(input, 10), "\u{2204}"))
    "NotGreater;" <> _ -> Ok(#(list.drop(input, 11), "\u{226F}"))
    "NotGreaterEqual;" <> _ -> Ok(#(list.drop(input, 16), "\u{2271}"))
    "NotGreaterFullEqual;" <> _ ->
      Ok(#(list.drop(input, 20), "\u{2267}\u{338}"))
    "NotGreaterGreater;" <> _ -> Ok(#(list.drop(input, 18), "\u{226B}\u{338}"))
    "NotGreaterLess;" <> _ -> Ok(#(list.drop(input, 15), "\u{2279}"))
    "NotGreaterSlantEqual;" <> _ ->
      Ok(#(list.drop(input, 21), "\u{2A7E}\u{338}"))
    "NotGreaterTilde;" <> _ -> Ok(#(list.drop(input, 16), "\u{2275}"))
    "NotHumpDownHump;" <> _ -> Ok(#(list.drop(input, 16), "\u{224E}\u{338}"))
    "NotHumpEqual;" <> _ -> Ok(#(list.drop(input, 13), "\u{224F}\u{338}"))
    "NotLeftTriangle;" <> _ -> Ok(#(list.drop(input, 16), "\u{22EA}"))
    "NotLeftTriangleBar;" <> _ -> Ok(#(list.drop(input, 19), "\u{29CF}\u{338}"))
    "NotLeftTriangleEqual;" <> _ -> Ok(#(list.drop(input, 21), "\u{22EC}"))
    "NotLess;" <> _ -> Ok(#(list.drop(input, 8), "\u{226E}"))
    "NotLessEqual;" <> _ -> Ok(#(list.drop(input, 13), "\u{2270}"))
    "NotLessGreater;" <> _ -> Ok(#(list.drop(input, 15), "\u{2278}"))
    "NotLessLess;" <> _ -> Ok(#(list.drop(input, 12), "\u{226A}\u{338}"))
    "NotLessSlantEqual;" <> _ -> Ok(#(list.drop(input, 18), "\u{2A7D}\u{338}"))
    "NotLessTilde;" <> _ -> Ok(#(list.drop(input, 13), "\u{2274}"))
    "NotNestedGreaterGreater;" <> _ ->
      Ok(#(list.drop(input, 24), "\u{2AA2}\u{338}"))
    "NotNestedLessLess;" <> _ -> Ok(#(list.drop(input, 18), "\u{2AA1}\u{338}"))
    "NotPrecedes;" <> _ -> Ok(#(list.drop(input, 12), "\u{2280}"))
    "NotPrecedesEqual;" <> _ -> Ok(#(list.drop(input, 17), "\u{2AAF}\u{338}"))
    "NotPrecedesSlantEqual;" <> _ -> Ok(#(list.drop(input, 22), "\u{22E0}"))
    "NotReverseElement;" <> _ -> Ok(#(list.drop(input, 18), "\u{220C}"))
    "NotRightTriangle;" <> _ -> Ok(#(list.drop(input, 17), "\u{22EB}"))
    "NotRightTriangleBar;" <> _ ->
      Ok(#(list.drop(input, 20), "\u{29D0}\u{338}"))
    "NotRightTriangleEqual;" <> _ -> Ok(#(list.drop(input, 22), "\u{22ED}"))
    "NotSquareSubset;" <> _ -> Ok(#(list.drop(input, 16), "\u{228F}\u{338}"))
    "NotSquareSubsetEqual;" <> _ -> Ok(#(list.drop(input, 21), "\u{22E2}"))
    "NotSquareSuperset;" <> _ -> Ok(#(list.drop(input, 18), "\u{2290}\u{338}"))
    "NotSquareSupersetEqual;" <> _ -> Ok(#(list.drop(input, 23), "\u{22E3}"))
    "NotSubset;" <> _ -> Ok(#(list.drop(input, 10), "\u{2282}\u{20D2}"))
    "NotSubsetEqual;" <> _ -> Ok(#(list.drop(input, 15), "\u{2288}"))
    "NotSucceeds;" <> _ -> Ok(#(list.drop(input, 12), "\u{2281}"))
    "NotSucceedsEqual;" <> _ -> Ok(#(list.drop(input, 17), "\u{2AB0}\u{338}"))
    "NotSucceedsSlantEqual;" <> _ -> Ok(#(list.drop(input, 22), "\u{22E1}"))
    "NotSucceedsTilde;" <> _ -> Ok(#(list.drop(input, 17), "\u{227F}\u{338}"))
    "NotSuperset;" <> _ -> Ok(#(list.drop(input, 12), "\u{2283}\u{20D2}"))
    "NotSupersetEqual;" <> _ -> Ok(#(list.drop(input, 17), "\u{2289}"))
    "NotTilde;" <> _ -> Ok(#(list.drop(input, 9), "\u{2241}"))
    "NotTildeEqual;" <> _ -> Ok(#(list.drop(input, 14), "\u{2244}"))
    "NotTildeFullEqual;" <> _ -> Ok(#(list.drop(input, 18), "\u{2247}"))
    "NotTildeTilde;" <> _ -> Ok(#(list.drop(input, 14), "\u{2249}"))
    "NotVerticalBar;" <> _ -> Ok(#(list.drop(input, 15), "\u{2224}"))
    "Nscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4A9}"))
    "Ntilde;" <> _ -> Ok(#(list.drop(input, 7), "\u{D1}"))
    "Nu;" <> _ -> Ok(#(list.drop(input, 3), "\u{39D}"))
    _ -> Error(Nil)
  }
}

fn match_upper_o(entity: String, input: List(String)) {
  case entity {
    "OElig;" <> _ -> Ok(#(list.drop(input, 6), "\u{152}"))
    "Oacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{D3}"))
    "Ocirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{D4}"))
    "Ocy;" <> _ -> Ok(#(list.drop(input, 4), "\u{41E}"))
    "Odblac;" <> _ -> Ok(#(list.drop(input, 7), "\u{150}"))
    "Ofr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D512}"))
    "Ograve;" <> _ -> Ok(#(list.drop(input, 7), "\u{D2}"))
    "Omacr;" <> _ -> Ok(#(list.drop(input, 6), "\u{14C}"))
    "Omega;" <> _ -> Ok(#(list.drop(input, 6), "\u{3A9}"))
    "Omicron;" <> _ -> Ok(#(list.drop(input, 8), "\u{39F}"))
    "Oopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D546}"))
    "OpenCurlyDoubleQuote;" <> _ -> Ok(#(list.drop(input, 21), "\u{201C}"))
    "OpenCurlyQuote;" <> _ -> Ok(#(list.drop(input, 15), "\u{2018}"))
    "Or;" <> _ -> Ok(#(list.drop(input, 3), "\u{2A54}"))
    "Oscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4AA}"))
    "Oslash;" <> _ -> Ok(#(list.drop(input, 7), "\u{D8}"))
    "Otilde;" <> _ -> Ok(#(list.drop(input, 7), "\u{D5}"))
    "Otimes;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A37}"))
    "Ouml;" <> _ -> Ok(#(list.drop(input, 5), "\u{D6}"))
    "OverBar;" <> _ -> Ok(#(list.drop(input, 8), "\u{203E}"))
    "OverBrace;" <> _ -> Ok(#(list.drop(input, 10), "\u{23DE}"))
    "OverBracket;" <> _ -> Ok(#(list.drop(input, 12), "\u{23B4}"))
    "OverParenthesis;" <> _ -> Ok(#(list.drop(input, 16), "\u{23DC}"))
    _ -> Error(Nil)
  }
}

fn match_upper_p(entity: String, input: List(String)) {
  case entity {
    "PartialD;" <> _ -> Ok(#(list.drop(input, 9), "\u{2202}"))
    "Pcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{41F}"))
    "Pfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D513}"))
    "Phi;" <> _ -> Ok(#(list.drop(input, 4), "\u{3A6}"))
    "Pi;" <> _ -> Ok(#(list.drop(input, 3), "\u{3A0}"))
    "PlusMinus;" <> _ -> Ok(#(list.drop(input, 10), "\u{B1}"))
    "Poincareplane;" <> _ -> Ok(#(list.drop(input, 14), "\u{210C}"))
    "Popf;" <> _ -> Ok(#(list.drop(input, 5), "\u{2119}"))
    "Pr;" <> _ -> Ok(#(list.drop(input, 3), "\u{2ABB}"))
    "Precedes;" <> _ -> Ok(#(list.drop(input, 9), "\u{227A}"))
    "PrecedesEqual;" <> _ -> Ok(#(list.drop(input, 14), "\u{2AAF}"))
    "PrecedesSlantEqual;" <> _ -> Ok(#(list.drop(input, 19), "\u{227C}"))
    "PrecedesTilde;" <> _ -> Ok(#(list.drop(input, 14), "\u{227E}"))
    "Prime;" <> _ -> Ok(#(list.drop(input, 6), "\u{2033}"))
    "Product;" <> _ -> Ok(#(list.drop(input, 8), "\u{220F}"))
    "Proportion;" <> _ -> Ok(#(list.drop(input, 11), "\u{2237}"))
    "Proportional;" <> _ -> Ok(#(list.drop(input, 13), "\u{221D}"))
    "Pscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4AB}"))
    "Psi;" <> _ -> Ok(#(list.drop(input, 4), "\u{3A8}"))
    _ -> Error(Nil)
  }
}

fn match_upper_q(entity: String, input: List(String)) {
  case entity {
    "QUOT;" <> _ -> Ok(#(list.drop(input, 5), "\u{22}"))
    "Qfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D514}"))
    "Qopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{211A}"))
    "Qscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4AC}"))
    _ -> Error(Nil)
  }
}

fn match_upper_r(entity: String, input: List(String)) {
  case entity {
    "RBarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{2910}"))
    "REG;" <> _ -> Ok(#(list.drop(input, 4), "\u{AE}"))
    "Racute;" <> _ -> Ok(#(list.drop(input, 7), "\u{154}"))
    "Rang;" <> _ -> Ok(#(list.drop(input, 5), "\u{27EB}"))
    "Rarr;" <> _ -> Ok(#(list.drop(input, 5), "\u{21A0}"))
    "Rarrtl;" <> _ -> Ok(#(list.drop(input, 7), "\u{2916}"))
    "Rcaron;" <> _ -> Ok(#(list.drop(input, 7), "\u{158}"))
    "Rcedil;" <> _ -> Ok(#(list.drop(input, 7), "\u{156}"))
    "Rcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{420}"))
    "Re;" <> _ -> Ok(#(list.drop(input, 3), "\u{211C}"))
    "ReverseElement;" <> _ -> Ok(#(list.drop(input, 15), "\u{220B}"))
    "ReverseEquilibrium;" <> _ -> Ok(#(list.drop(input, 19), "\u{21CB}"))
    "ReverseUpEquilibrium;" <> _ -> Ok(#(list.drop(input, 21), "\u{296F}"))
    "Rfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{211C}"))
    "Rho;" <> _ -> Ok(#(list.drop(input, 4), "\u{3A1}"))
    "RightAngleBracket;" <> _ -> Ok(#(list.drop(input, 18), "\u{27E9}"))
    "RightArrow;" <> _ -> Ok(#(list.drop(input, 11), "\u{2192}"))
    "RightArrowBar;" <> _ -> Ok(#(list.drop(input, 14), "\u{21E5}"))
    "RightArrowLeftArrow;" <> _ -> Ok(#(list.drop(input, 20), "\u{21C4}"))
    "RightCeiling;" <> _ -> Ok(#(list.drop(input, 13), "\u{2309}"))
    "RightDoubleBracket;" <> _ -> Ok(#(list.drop(input, 19), "\u{27E7}"))
    "RightDownTeeVector;" <> _ -> Ok(#(list.drop(input, 19), "\u{295D}"))
    "RightDownVector;" <> _ -> Ok(#(list.drop(input, 16), "\u{21C2}"))
    "RightDownVectorBar;" <> _ -> Ok(#(list.drop(input, 19), "\u{2955}"))
    "RightFloor;" <> _ -> Ok(#(list.drop(input, 11), "\u{230B}"))
    "RightTee;" <> _ -> Ok(#(list.drop(input, 9), "\u{22A2}"))
    "RightTeeArrow;" <> _ -> Ok(#(list.drop(input, 14), "\u{21A6}"))
    "RightTeeVector;" <> _ -> Ok(#(list.drop(input, 15), "\u{295B}"))
    "RightTriangle;" <> _ -> Ok(#(list.drop(input, 14), "\u{22B3}"))
    "RightTriangleBar;" <> _ -> Ok(#(list.drop(input, 17), "\u{29D0}"))
    "RightTriangleEqual;" <> _ -> Ok(#(list.drop(input, 19), "\u{22B5}"))
    "RightUpDownVector;" <> _ -> Ok(#(list.drop(input, 18), "\u{294F}"))
    "RightUpTeeVector;" <> _ -> Ok(#(list.drop(input, 17), "\u{295C}"))
    "RightUpVector;" <> _ -> Ok(#(list.drop(input, 14), "\u{21BE}"))
    "RightUpVectorBar;" <> _ -> Ok(#(list.drop(input, 17), "\u{2954}"))
    "RightVector;" <> _ -> Ok(#(list.drop(input, 12), "\u{21C0}"))
    "RightVectorBar;" <> _ -> Ok(#(list.drop(input, 15), "\u{2953}"))
    "Rightarrow;" <> _ -> Ok(#(list.drop(input, 11), "\u{21D2}"))
    "Ropf;" <> _ -> Ok(#(list.drop(input, 5), "\u{211D}"))
    "RoundImplies;" <> _ -> Ok(#(list.drop(input, 13), "\u{2970}"))
    "Rrightarrow;" <> _ -> Ok(#(list.drop(input, 12), "\u{21DB}"))
    "Rscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{211B}"))
    "Rsh;" <> _ -> Ok(#(list.drop(input, 4), "\u{21B1}"))
    "RuleDelayed;" <> _ -> Ok(#(list.drop(input, 12), "\u{29F4}"))
    _ -> Error(Nil)
  }
}

fn match_upper_s(entity: String, input: List(String)) {
  case entity {
    "SHCHcy;" <> _ -> Ok(#(list.drop(input, 7), "\u{429}"))
    "SHcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{428}"))
    "SOFTcy;" <> _ -> Ok(#(list.drop(input, 7), "\u{42C}"))
    "Sacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{15A}"))
    "Sc;" <> _ -> Ok(#(list.drop(input, 3), "\u{2ABC}"))
    "Scaron;" <> _ -> Ok(#(list.drop(input, 7), "\u{160}"))
    "Scedil;" <> _ -> Ok(#(list.drop(input, 7), "\u{15E}"))
    "Scirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{15C}"))
    "Scy;" <> _ -> Ok(#(list.drop(input, 4), "\u{421}"))
    "Sfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D516}"))
    "ShortDownArrow;" <> _ -> Ok(#(list.drop(input, 15), "\u{2193}"))
    "ShortLeftArrow;" <> _ -> Ok(#(list.drop(input, 15), "\u{2190}"))
    "ShortRightArrow;" <> _ -> Ok(#(list.drop(input, 16), "\u{2192}"))
    "ShortUpArrow;" <> _ -> Ok(#(list.drop(input, 13), "\u{2191}"))
    "Sigma;" <> _ -> Ok(#(list.drop(input, 6), "\u{3A3}"))
    "SmallCircle;" <> _ -> Ok(#(list.drop(input, 12), "\u{2218}"))
    "Sopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D54A}"))
    "Sqrt;" <> _ -> Ok(#(list.drop(input, 5), "\u{221A}"))
    "Square;" <> _ -> Ok(#(list.drop(input, 7), "\u{25A1}"))
    "SquareIntersection;" <> _ -> Ok(#(list.drop(input, 19), "\u{2293}"))
    "SquareSubset;" <> _ -> Ok(#(list.drop(input, 13), "\u{228F}"))
    "SquareSubsetEqual;" <> _ -> Ok(#(list.drop(input, 18), "\u{2291}"))
    "SquareSuperset;" <> _ -> Ok(#(list.drop(input, 15), "\u{2290}"))
    "SquareSupersetEqual;" <> _ -> Ok(#(list.drop(input, 20), "\u{2292}"))
    "SquareUnion;" <> _ -> Ok(#(list.drop(input, 12), "\u{2294}"))
    "Sscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4AE}"))
    "Star;" <> _ -> Ok(#(list.drop(input, 5), "\u{22C6}"))
    "Sub;" <> _ -> Ok(#(list.drop(input, 4), "\u{22D0}"))
    "Subset;" <> _ -> Ok(#(list.drop(input, 7), "\u{22D0}"))
    "SubsetEqual;" <> _ -> Ok(#(list.drop(input, 12), "\u{2286}"))
    "Succeeds;" <> _ -> Ok(#(list.drop(input, 9), "\u{227B}"))
    "SucceedsEqual;" <> _ -> Ok(#(list.drop(input, 14), "\u{2AB0}"))
    "SucceedsSlantEqual;" <> _ -> Ok(#(list.drop(input, 19), "\u{227D}"))
    "SucceedsTilde;" <> _ -> Ok(#(list.drop(input, 14), "\u{227F}"))
    "SuchThat;" <> _ -> Ok(#(list.drop(input, 9), "\u{220B}"))
    "Sum;" <> _ -> Ok(#(list.drop(input, 4), "\u{2211}"))
    "Sup;" <> _ -> Ok(#(list.drop(input, 4), "\u{22D1}"))
    "Superset;" <> _ -> Ok(#(list.drop(input, 9), "\u{2283}"))
    "SupersetEqual;" <> _ -> Ok(#(list.drop(input, 14), "\u{2287}"))
    "Supset;" <> _ -> Ok(#(list.drop(input, 7), "\u{22D1}"))
    _ -> Error(Nil)
  }
}

fn match_upper_t(entity: String, input: List(String)) {
  case entity {
    "THORN;" <> _ -> Ok(#(list.drop(input, 6), "\u{DE}"))
    "TRADE;" <> _ -> Ok(#(list.drop(input, 6), "\u{2122}"))
    "TSHcy;" <> _ -> Ok(#(list.drop(input, 6), "\u{40B}"))
    "TScy;" <> _ -> Ok(#(list.drop(input, 5), "\u{426}"))
    "Tab;" <> _ -> Ok(#(list.drop(input, 4), "\u{9}"))
    "Tau;" <> _ -> Ok(#(list.drop(input, 4), "\u{3A4}"))
    "Tcaron;" <> _ -> Ok(#(list.drop(input, 7), "\u{164}"))
    "Tcedil;" <> _ -> Ok(#(list.drop(input, 7), "\u{162}"))
    "Tcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{422}"))
    "Tfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D517}"))
    "Therefore;" <> _ -> Ok(#(list.drop(input, 10), "\u{2234}"))
    "Theta;" <> _ -> Ok(#(list.drop(input, 6), "\u{398}"))
    "ThickSpace;" <> _ -> Ok(#(list.drop(input, 11), "\u{205F}\u{200A}"))
    "ThinSpace;" <> _ -> Ok(#(list.drop(input, 10), "\u{2009}"))
    "Tilde;" <> _ -> Ok(#(list.drop(input, 6), "\u{223C}"))
    "TildeEqual;" <> _ -> Ok(#(list.drop(input, 11), "\u{2243}"))
    "TildeFullEqual;" <> _ -> Ok(#(list.drop(input, 15), "\u{2245}"))
    "TildeTilde;" <> _ -> Ok(#(list.drop(input, 11), "\u{2248}"))
    "Topf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D54B}"))
    "TripleDot;" <> _ -> Ok(#(list.drop(input, 10), "\u{20DB}"))
    "Tscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4AF}"))
    "Tstrok;" <> _ -> Ok(#(list.drop(input, 7), "\u{166}"))
    _ -> Error(Nil)
  }
}

fn match_upper_u(entity: String, input: List(String)) {
  case entity {
    "Uacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{DA}"))
    "Uarr;" <> _ -> Ok(#(list.drop(input, 5), "\u{219F}"))
    "Uarrocir;" <> _ -> Ok(#(list.drop(input, 9), "\u{2949}"))
    "Ubrcy;" <> _ -> Ok(#(list.drop(input, 6), "\u{40E}"))
    "Ubreve;" <> _ -> Ok(#(list.drop(input, 7), "\u{16C}"))
    "Ucirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{DB}"))
    "Ucy;" <> _ -> Ok(#(list.drop(input, 4), "\u{423}"))
    "Udblac;" <> _ -> Ok(#(list.drop(input, 7), "\u{170}"))
    "Ufr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D518}"))
    "Ugrave;" <> _ -> Ok(#(list.drop(input, 7), "\u{D9}"))
    "Umacr;" <> _ -> Ok(#(list.drop(input, 6), "\u{16A}"))
    "UnderBar;" <> _ -> Ok(#(list.drop(input, 9), "\u{5F}"))
    "UnderBrace;" <> _ -> Ok(#(list.drop(input, 11), "\u{23DF}"))
    "UnderBracket;" <> _ -> Ok(#(list.drop(input, 13), "\u{23B5}"))
    "UnderParenthesis;" <> _ -> Ok(#(list.drop(input, 17), "\u{23DD}"))
    "Union;" <> _ -> Ok(#(list.drop(input, 6), "\u{22C3}"))
    "UnionPlus;" <> _ -> Ok(#(list.drop(input, 10), "\u{228E}"))
    "Uogon;" <> _ -> Ok(#(list.drop(input, 6), "\u{172}"))
    "Uopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D54C}"))
    "UpArrow;" <> _ -> Ok(#(list.drop(input, 8), "\u{2191}"))
    "UpArrowBar;" <> _ -> Ok(#(list.drop(input, 11), "\u{2912}"))
    "UpArrowDownArrow;" <> _ -> Ok(#(list.drop(input, 17), "\u{21C5}"))
    "UpDownArrow;" <> _ -> Ok(#(list.drop(input, 12), "\u{2195}"))
    "UpEquilibrium;" <> _ -> Ok(#(list.drop(input, 14), "\u{296E}"))
    "UpTee;" <> _ -> Ok(#(list.drop(input, 6), "\u{22A5}"))
    "UpTeeArrow;" <> _ -> Ok(#(list.drop(input, 11), "\u{21A5}"))
    "Uparrow;" <> _ -> Ok(#(list.drop(input, 8), "\u{21D1}"))
    "Updownarrow;" <> _ -> Ok(#(list.drop(input, 12), "\u{21D5}"))
    "UpperLeftArrow;" <> _ -> Ok(#(list.drop(input, 15), "\u{2196}"))
    "UpperRightArrow;" <> _ -> Ok(#(list.drop(input, 16), "\u{2197}"))
    "Upsi;" <> _ -> Ok(#(list.drop(input, 5), "\u{3D2}"))
    "Upsilon;" <> _ -> Ok(#(list.drop(input, 8), "\u{3A5}"))
    "Uring;" <> _ -> Ok(#(list.drop(input, 6), "\u{16E}"))
    "Uscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4B0}"))
    "Utilde;" <> _ -> Ok(#(list.drop(input, 7), "\u{168}"))
    "Uuml;" <> _ -> Ok(#(list.drop(input, 5), "\u{DC}"))
    _ -> Error(Nil)
  }
}

fn match_upper_v(entity: String, input: List(String)) {
  case entity {
    "VDash;" <> _ -> Ok(#(list.drop(input, 6), "\u{22AB}"))
    "Vbar;" <> _ -> Ok(#(list.drop(input, 5), "\u{2AEB}"))
    "Vcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{412}"))
    "Vdash;" <> _ -> Ok(#(list.drop(input, 6), "\u{22A9}"))
    "Vdashl;" <> _ -> Ok(#(list.drop(input, 7), "\u{2AE6}"))
    "Vee;" <> _ -> Ok(#(list.drop(input, 4), "\u{22C1}"))
    "Verbar;" <> _ -> Ok(#(list.drop(input, 7), "\u{2016}"))
    "Vert;" <> _ -> Ok(#(list.drop(input, 5), "\u{2016}"))
    "VerticalBar;" <> _ -> Ok(#(list.drop(input, 12), "\u{2223}"))
    "VerticalLine;" <> _ -> Ok(#(list.drop(input, 13), "\u{7C}"))
    "VerticalSeparator;" <> _ -> Ok(#(list.drop(input, 18), "\u{2758}"))
    "VerticalTilde;" <> _ -> Ok(#(list.drop(input, 14), "\u{2240}"))
    "VeryThinSpace;" <> _ -> Ok(#(list.drop(input, 14), "\u{200A}"))
    "Vfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D519}"))
    "Vopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D54D}"))
    "Vscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4B1}"))
    "Vvdash;" <> _ -> Ok(#(list.drop(input, 7), "\u{22AA}"))
    _ -> Error(Nil)
  }
}

fn match_upper_w(entity: String, input: List(String)) {
  case entity {
    "Wcirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{174}"))
    "Wedge;" <> _ -> Ok(#(list.drop(input, 6), "\u{22C0}"))
    "Wfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D51A}"))
    "Wopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D54E}"))
    "Wscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4B2}"))
    _ -> Error(Nil)
  }
}

fn match_upper_x(entity: String, input: List(String)) {
  case entity {
    "Xfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D51B}"))
    "Xi;" <> _ -> Ok(#(list.drop(input, 3), "\u{39E}"))
    "Xopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D54F}"))
    "Xscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4B3}"))
    _ -> Error(Nil)
  }
}

fn match_upper_y(entity: String, input: List(String)) {
  case entity {
    "YAcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{42F}"))
    "YIcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{407}"))
    "YUcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{42E}"))
    "Yacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{DD}"))
    "Ycirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{176}"))
    "Ycy;" <> _ -> Ok(#(list.drop(input, 4), "\u{42B}"))
    "Yfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D51C}"))
    "Yopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D550}"))
    "Yscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4B4}"))
    "Yuml;" <> _ -> Ok(#(list.drop(input, 5), "\u{178}"))
    _ -> Error(Nil)
  }
}

fn match_upper_z(entity: String, input: List(String)) {
  case entity {
    "ZHcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{416}"))
    "Zacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{179}"))
    "Zcaron;" <> _ -> Ok(#(list.drop(input, 7), "\u{17D}"))
    "Zcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{417}"))
    "Zdot;" <> _ -> Ok(#(list.drop(input, 5), "\u{17B}"))
    "ZeroWidthSpace;" <> _ -> Ok(#(list.drop(input, 15), "\u{200B}"))
    "Zeta;" <> _ -> Ok(#(list.drop(input, 5), "\u{396}"))
    "Zfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{2128}"))
    "Zopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{2124}"))
    "Zscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4B5}"))
    _ -> Error(Nil)
  }
}

fn match_a(entity: String, input: List(String)) {
  case entity {
    "aacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{E1}"))
    "abreve;" <> _ -> Ok(#(list.drop(input, 7), "\u{103}"))
    "ac;" <> _ -> Ok(#(list.drop(input, 3), "\u{223E}"))
    "acE;" <> _ -> Ok(#(list.drop(input, 4), "\u{223E}\u{333}"))
    "acd;" <> _ -> Ok(#(list.drop(input, 4), "\u{223F}"))
    "acirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{E2}"))
    "acute;" <> _ -> Ok(#(list.drop(input, 6), "\u{B4}"))
    "acy;" <> _ -> Ok(#(list.drop(input, 4), "\u{430}"))
    "aelig;" <> _ -> Ok(#(list.drop(input, 6), "\u{E6}"))
    "af;" <> _ -> Ok(#(list.drop(input, 3), "\u{2061}"))
    "afr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D51E}"))
    "agrave;" <> _ -> Ok(#(list.drop(input, 7), "\u{E0}"))
    "alefsym;" <> _ -> Ok(#(list.drop(input, 8), "\u{2135}"))
    "aleph;" <> _ -> Ok(#(list.drop(input, 6), "\u{2135}"))
    "alpha;" <> _ -> Ok(#(list.drop(input, 6), "\u{3B1}"))
    "amacr;" <> _ -> Ok(#(list.drop(input, 6), "\u{101}"))
    "amalg;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A3F}"))
    "amp;" <> _ -> Ok(#(list.drop(input, 4), "\u{26}"))
    "and;" <> _ -> Ok(#(list.drop(input, 4), "\u{2227}"))
    "andand;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A55}"))
    "andd;" <> _ -> Ok(#(list.drop(input, 5), "\u{2A5C}"))
    "andslope;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A58}"))
    "andv;" <> _ -> Ok(#(list.drop(input, 5), "\u{2A5A}"))
    "ang;" <> _ -> Ok(#(list.drop(input, 4), "\u{2220}"))
    "ange;" <> _ -> Ok(#(list.drop(input, 5), "\u{29A4}"))
    "angle;" <> _ -> Ok(#(list.drop(input, 6), "\u{2220}"))
    "angmsd;" <> _ -> Ok(#(list.drop(input, 7), "\u{2221}"))
    "angmsdaa;" <> _ -> Ok(#(list.drop(input, 9), "\u{29A8}"))
    "angmsdab;" <> _ -> Ok(#(list.drop(input, 9), "\u{29A9}"))
    "angmsdac;" <> _ -> Ok(#(list.drop(input, 9), "\u{29AA}"))
    "angmsdad;" <> _ -> Ok(#(list.drop(input, 9), "\u{29AB}"))
    "angmsdae;" <> _ -> Ok(#(list.drop(input, 9), "\u{29AC}"))
    "angmsdaf;" <> _ -> Ok(#(list.drop(input, 9), "\u{29AD}"))
    "angmsdag;" <> _ -> Ok(#(list.drop(input, 9), "\u{29AE}"))
    "angmsdah;" <> _ -> Ok(#(list.drop(input, 9), "\u{29AF}"))
    "angrt;" <> _ -> Ok(#(list.drop(input, 6), "\u{221F}"))
    "angrtvb;" <> _ -> Ok(#(list.drop(input, 8), "\u{22BE}"))
    "angrtvbd;" <> _ -> Ok(#(list.drop(input, 9), "\u{299D}"))
    "angsph;" <> _ -> Ok(#(list.drop(input, 7), "\u{2222}"))
    "angst;" <> _ -> Ok(#(list.drop(input, 6), "\u{C5}"))
    "angzarr;" <> _ -> Ok(#(list.drop(input, 8), "\u{237C}"))
    "aogon;" <> _ -> Ok(#(list.drop(input, 6), "\u{105}"))
    "aopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D552}"))
    "ap;" <> _ -> Ok(#(list.drop(input, 3), "\u{2248}"))
    "apE;" <> _ -> Ok(#(list.drop(input, 4), "\u{2A70}"))
    "apacir;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A6F}"))
    "ape;" <> _ -> Ok(#(list.drop(input, 4), "\u{224A}"))
    "apid;" <> _ -> Ok(#(list.drop(input, 5), "\u{224B}"))
    "apos;" <> _ -> Ok(#(list.drop(input, 5), "\u{27}"))
    "approx;" <> _ -> Ok(#(list.drop(input, 7), "\u{2248}"))
    "approxeq;" <> _ -> Ok(#(list.drop(input, 9), "\u{224A}"))
    "aring;" <> _ -> Ok(#(list.drop(input, 6), "\u{E5}"))
    "ascr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4B6}"))
    "ast;" <> _ -> Ok(#(list.drop(input, 4), "\u{2A}"))
    "asymp;" <> _ -> Ok(#(list.drop(input, 6), "\u{2248}"))
    "asympeq;" <> _ -> Ok(#(list.drop(input, 8), "\u{224D}"))
    "atilde;" <> _ -> Ok(#(list.drop(input, 7), "\u{E3}"))
    "auml;" <> _ -> Ok(#(list.drop(input, 5), "\u{E4}"))
    "awconint;" <> _ -> Ok(#(list.drop(input, 9), "\u{2233}"))
    "awint;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A11}"))
    _ -> Error(Nil)
  }
}

fn match_b(entity: String, input: List(String)) {
  case entity {
    "bNot;" <> _ -> Ok(#(list.drop(input, 5), "\u{2AED}"))
    "backcong;" <> _ -> Ok(#(list.drop(input, 9), "\u{224C}"))
    "backepsilon;" <> _ -> Ok(#(list.drop(input, 12), "\u{3F6}"))
    "backprime;" <> _ -> Ok(#(list.drop(input, 10), "\u{2035}"))
    "backsim;" <> _ -> Ok(#(list.drop(input, 8), "\u{223D}"))
    "backsimeq;" <> _ -> Ok(#(list.drop(input, 10), "\u{22CD}"))
    "barvee;" <> _ -> Ok(#(list.drop(input, 7), "\u{22BD}"))
    "barwed;" <> _ -> Ok(#(list.drop(input, 7), "\u{2305}"))
    "barwedge;" <> _ -> Ok(#(list.drop(input, 9), "\u{2305}"))
    "bbrk;" <> _ -> Ok(#(list.drop(input, 5), "\u{23B5}"))
    "bbrktbrk;" <> _ -> Ok(#(list.drop(input, 9), "\u{23B6}"))
    "bcong;" <> _ -> Ok(#(list.drop(input, 6), "\u{224C}"))
    "bcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{431}"))
    "bdquo;" <> _ -> Ok(#(list.drop(input, 6), "\u{201E}"))
    "becaus;" <> _ -> Ok(#(list.drop(input, 7), "\u{2235}"))
    "because;" <> _ -> Ok(#(list.drop(input, 8), "\u{2235}"))
    "bemptyv;" <> _ -> Ok(#(list.drop(input, 8), "\u{29B0}"))
    "bepsi;" <> _ -> Ok(#(list.drop(input, 6), "\u{3F6}"))
    "bernou;" <> _ -> Ok(#(list.drop(input, 7), "\u{212C}"))
    "beta;" <> _ -> Ok(#(list.drop(input, 5), "\u{3B2}"))
    "beth;" <> _ -> Ok(#(list.drop(input, 5), "\u{2136}"))
    "between;" <> _ -> Ok(#(list.drop(input, 8), "\u{226C}"))
    "bfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D51F}"))
    "bigcap;" <> _ -> Ok(#(list.drop(input, 7), "\u{22C2}"))
    "bigcirc;" <> _ -> Ok(#(list.drop(input, 8), "\u{25EF}"))
    "bigcup;" <> _ -> Ok(#(list.drop(input, 7), "\u{22C3}"))
    "bigodot;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A00}"))
    "bigoplus;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A01}"))
    "bigotimes;" <> _ -> Ok(#(list.drop(input, 10), "\u{2A02}"))
    "bigsqcup;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A06}"))
    "bigstar;" <> _ -> Ok(#(list.drop(input, 8), "\u{2605}"))
    "bigtriangledown;" <> _ -> Ok(#(list.drop(input, 16), "\u{25BD}"))
    "bigtriangleup;" <> _ -> Ok(#(list.drop(input, 14), "\u{25B3}"))
    "biguplus;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A04}"))
    "bigvee;" <> _ -> Ok(#(list.drop(input, 7), "\u{22C1}"))
    "bigwedge;" <> _ -> Ok(#(list.drop(input, 9), "\u{22C0}"))
    "bkarow;" <> _ -> Ok(#(list.drop(input, 7), "\u{290D}"))
    "blacklozenge;" <> _ -> Ok(#(list.drop(input, 13), "\u{29EB}"))
    "blacksquare;" <> _ -> Ok(#(list.drop(input, 12), "\u{25AA}"))
    "blacktriangle;" <> _ -> Ok(#(list.drop(input, 14), "\u{25B4}"))
    "blacktriangledown;" <> _ -> Ok(#(list.drop(input, 18), "\u{25BE}"))
    "blacktriangleleft;" <> _ -> Ok(#(list.drop(input, 18), "\u{25C2}"))
    "blacktriangleright;" <> _ -> Ok(#(list.drop(input, 19), "\u{25B8}"))
    "blank;" <> _ -> Ok(#(list.drop(input, 6), "\u{2423}"))
    "blk12;" <> _ -> Ok(#(list.drop(input, 6), "\u{2592}"))
    "blk14;" <> _ -> Ok(#(list.drop(input, 6), "\u{2591}"))
    "blk34;" <> _ -> Ok(#(list.drop(input, 6), "\u{2593}"))
    "block;" <> _ -> Ok(#(list.drop(input, 6), "\u{2588}"))
    "bne;" <> _ -> Ok(#(list.drop(input, 4), "\u{3D}\u{20E5}"))
    "bnequiv;" <> _ -> Ok(#(list.drop(input, 8), "\u{2261}\u{20E5}"))
    "bnot;" <> _ -> Ok(#(list.drop(input, 5), "\u{2310}"))
    "bopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D553}"))
    "bot;" <> _ -> Ok(#(list.drop(input, 4), "\u{22A5}"))
    "bottom;" <> _ -> Ok(#(list.drop(input, 7), "\u{22A5}"))
    "bowtie;" <> _ -> Ok(#(list.drop(input, 7), "\u{22C8}"))
    "boxDL;" <> _ -> Ok(#(list.drop(input, 6), "\u{2557}"))
    "boxDR;" <> _ -> Ok(#(list.drop(input, 6), "\u{2554}"))
    "boxDl;" <> _ -> Ok(#(list.drop(input, 6), "\u{2556}"))
    "boxDr;" <> _ -> Ok(#(list.drop(input, 6), "\u{2553}"))
    "boxH;" <> _ -> Ok(#(list.drop(input, 5), "\u{2550}"))
    "boxHD;" <> _ -> Ok(#(list.drop(input, 6), "\u{2566}"))
    "boxHU;" <> _ -> Ok(#(list.drop(input, 6), "\u{2569}"))
    "boxHd;" <> _ -> Ok(#(list.drop(input, 6), "\u{2564}"))
    "boxHu;" <> _ -> Ok(#(list.drop(input, 6), "\u{2567}"))
    "boxUL;" <> _ -> Ok(#(list.drop(input, 6), "\u{255D}"))
    "boxUR;" <> _ -> Ok(#(list.drop(input, 6), "\u{255A}"))
    "boxUl;" <> _ -> Ok(#(list.drop(input, 6), "\u{255C}"))
    "boxUr;" <> _ -> Ok(#(list.drop(input, 6), "\u{2559}"))
    "boxV;" <> _ -> Ok(#(list.drop(input, 5), "\u{2551}"))
    "boxVH;" <> _ -> Ok(#(list.drop(input, 6), "\u{256C}"))
    "boxVL;" <> _ -> Ok(#(list.drop(input, 6), "\u{2563}"))
    "boxVR;" <> _ -> Ok(#(list.drop(input, 6), "\u{2560}"))
    "boxVh;" <> _ -> Ok(#(list.drop(input, 6), "\u{256B}"))
    "boxVl;" <> _ -> Ok(#(list.drop(input, 6), "\u{2562}"))
    "boxVr;" <> _ -> Ok(#(list.drop(input, 6), "\u{255F}"))
    "boxbox;" <> _ -> Ok(#(list.drop(input, 7), "\u{29C9}"))
    "boxdL;" <> _ -> Ok(#(list.drop(input, 6), "\u{2555}"))
    "boxdR;" <> _ -> Ok(#(list.drop(input, 6), "\u{2552}"))
    "boxdl;" <> _ -> Ok(#(list.drop(input, 6), "\u{2510}"))
    "boxdr;" <> _ -> Ok(#(list.drop(input, 6), "\u{250C}"))
    "boxh;" <> _ -> Ok(#(list.drop(input, 5), "\u{2500}"))
    "boxhD;" <> _ -> Ok(#(list.drop(input, 6), "\u{2565}"))
    "boxhU;" <> _ -> Ok(#(list.drop(input, 6), "\u{2568}"))
    "boxhd;" <> _ -> Ok(#(list.drop(input, 6), "\u{252C}"))
    "boxhu;" <> _ -> Ok(#(list.drop(input, 6), "\u{2534}"))
    "boxminus;" <> _ -> Ok(#(list.drop(input, 9), "\u{229F}"))
    "boxplus;" <> _ -> Ok(#(list.drop(input, 8), "\u{229E}"))
    "boxtimes;" <> _ -> Ok(#(list.drop(input, 9), "\u{22A0}"))
    "boxuL;" <> _ -> Ok(#(list.drop(input, 6), "\u{255B}"))
    "boxuR;" <> _ -> Ok(#(list.drop(input, 6), "\u{2558}"))
    "boxul;" <> _ -> Ok(#(list.drop(input, 6), "\u{2518}"))
    "boxur;" <> _ -> Ok(#(list.drop(input, 6), "\u{2514}"))
    "boxv;" <> _ -> Ok(#(list.drop(input, 5), "\u{2502}"))
    "boxvH;" <> _ -> Ok(#(list.drop(input, 6), "\u{256A}"))
    "boxvL;" <> _ -> Ok(#(list.drop(input, 6), "\u{2561}"))
    "boxvR;" <> _ -> Ok(#(list.drop(input, 6), "\u{255E}"))
    "boxvh;" <> _ -> Ok(#(list.drop(input, 6), "\u{253C}"))
    "boxvl;" <> _ -> Ok(#(list.drop(input, 6), "\u{2524}"))
    "boxvr;" <> _ -> Ok(#(list.drop(input, 6), "\u{251C}"))
    "bprime;" <> _ -> Ok(#(list.drop(input, 7), "\u{2035}"))
    "breve;" <> _ -> Ok(#(list.drop(input, 6), "\u{2D8}"))
    "brvbar;" <> _ -> Ok(#(list.drop(input, 7), "\u{A6}"))
    "bscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4B7}"))
    "bsemi;" <> _ -> Ok(#(list.drop(input, 6), "\u{204F}"))
    "bsim;" <> _ -> Ok(#(list.drop(input, 5), "\u{223D}"))
    "bsime;" <> _ -> Ok(#(list.drop(input, 6), "\u{22CD}"))
    "bsol;" <> _ -> Ok(#(list.drop(input, 5), "\u{5C}"))
    "bsolb;" <> _ -> Ok(#(list.drop(input, 6), "\u{29C5}"))
    "bsolhsub;" <> _ -> Ok(#(list.drop(input, 9), "\u{27C8}"))
    "bull;" <> _ -> Ok(#(list.drop(input, 5), "\u{2022}"))
    "bullet;" <> _ -> Ok(#(list.drop(input, 7), "\u{2022}"))
    "bump;" <> _ -> Ok(#(list.drop(input, 5), "\u{224E}"))
    "bumpE;" <> _ -> Ok(#(list.drop(input, 6), "\u{2AAE}"))
    "bumpe;" <> _ -> Ok(#(list.drop(input, 6), "\u{224F}"))
    "bumpeq;" <> _ -> Ok(#(list.drop(input, 7), "\u{224F}"))
    _ -> Error(Nil)
  }
}

fn match_c(entity: String, input: List(String)) {
  case entity {
    "cacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{107}"))
    "cap;" <> _ -> Ok(#(list.drop(input, 4), "\u{2229}"))
    "capand;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A44}"))
    "capbrcup;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A49}"))
    "capcap;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A4B}"))
    "capcup;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A47}"))
    "capdot;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A40}"))
    "caps;" <> _ -> Ok(#(list.drop(input, 5), "\u{2229}\u{FE00}"))
    "caret;" <> _ -> Ok(#(list.drop(input, 6), "\u{2041}"))
    "caron;" <> _ -> Ok(#(list.drop(input, 6), "\u{2C7}"))
    "ccaps;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A4D}"))
    "ccaron;" <> _ -> Ok(#(list.drop(input, 7), "\u{10D}"))
    "ccedil;" <> _ -> Ok(#(list.drop(input, 7), "\u{E7}"))
    "ccirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{109}"))
    "ccups;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A4C}"))
    "ccupssm;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A50}"))
    "cdot;" <> _ -> Ok(#(list.drop(input, 5), "\u{10B}"))
    "cedil;" <> _ -> Ok(#(list.drop(input, 6), "\u{B8}"))
    "cemptyv;" <> _ -> Ok(#(list.drop(input, 8), "\u{29B2}"))
    "cent;" <> _ -> Ok(#(list.drop(input, 5), "\u{A2}"))
    "centerdot;" <> _ -> Ok(#(list.drop(input, 10), "\u{B7}"))
    "cfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D520}"))
    "chcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{447}"))
    "check;" <> _ -> Ok(#(list.drop(input, 6), "\u{2713}"))
    "checkmark;" <> _ -> Ok(#(list.drop(input, 10), "\u{2713}"))
    "chi;" <> _ -> Ok(#(list.drop(input, 4), "\u{3C7}"))
    "cir;" <> _ -> Ok(#(list.drop(input, 4), "\u{25CB}"))
    "cirE;" <> _ -> Ok(#(list.drop(input, 5), "\u{29C3}"))
    "circ;" <> _ -> Ok(#(list.drop(input, 5), "\u{2C6}"))
    "circeq;" <> _ -> Ok(#(list.drop(input, 7), "\u{2257}"))
    "circlearrowleft;" <> _ -> Ok(#(list.drop(input, 16), "\u{21BA}"))
    "circlearrowright;" <> _ -> Ok(#(list.drop(input, 17), "\u{21BB}"))
    "circledR;" <> _ -> Ok(#(list.drop(input, 9), "\u{AE}"))
    "circledS;" <> _ -> Ok(#(list.drop(input, 9), "\u{24C8}"))
    "circledast;" <> _ -> Ok(#(list.drop(input, 11), "\u{229B}"))
    "circledcirc;" <> _ -> Ok(#(list.drop(input, 12), "\u{229A}"))
    "circleddash;" <> _ -> Ok(#(list.drop(input, 12), "\u{229D}"))
    "cire;" <> _ -> Ok(#(list.drop(input, 5), "\u{2257}"))
    "cirfnint;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A10}"))
    "cirmid;" <> _ -> Ok(#(list.drop(input, 7), "\u{2AEF}"))
    "cirscir;" <> _ -> Ok(#(list.drop(input, 8), "\u{29C2}"))
    "clubs;" <> _ -> Ok(#(list.drop(input, 6), "\u{2663}"))
    "clubsuit;" <> _ -> Ok(#(list.drop(input, 9), "\u{2663}"))
    "colon;" <> _ -> Ok(#(list.drop(input, 6), "\u{3A}"))
    "colone;" <> _ -> Ok(#(list.drop(input, 7), "\u{2254}"))
    "coloneq;" <> _ -> Ok(#(list.drop(input, 8), "\u{2254}"))
    "comma;" <> _ -> Ok(#(list.drop(input, 6), "\u{2C}"))
    "commat;" <> _ -> Ok(#(list.drop(input, 7), "\u{40}"))
    "comp;" <> _ -> Ok(#(list.drop(input, 5), "\u{2201}"))
    "compfn;" <> _ -> Ok(#(list.drop(input, 7), "\u{2218}"))
    "complement;" <> _ -> Ok(#(list.drop(input, 11), "\u{2201}"))
    "complexes;" <> _ -> Ok(#(list.drop(input, 10), "\u{2102}"))
    "cong;" <> _ -> Ok(#(list.drop(input, 5), "\u{2245}"))
    "congdot;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A6D}"))
    "conint;" <> _ -> Ok(#(list.drop(input, 7), "\u{222E}"))
    "copf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D554}"))
    "coprod;" <> _ -> Ok(#(list.drop(input, 7), "\u{2210}"))
    "copy;" <> _ -> Ok(#(list.drop(input, 5), "\u{A9}"))
    "copysr;" <> _ -> Ok(#(list.drop(input, 7), "\u{2117}"))
    "crarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21B5}"))
    "cross;" <> _ -> Ok(#(list.drop(input, 6), "\u{2717}"))
    "cscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4B8}"))
    "csub;" <> _ -> Ok(#(list.drop(input, 5), "\u{2ACF}"))
    "csube;" <> _ -> Ok(#(list.drop(input, 6), "\u{2AD1}"))
    "csup;" <> _ -> Ok(#(list.drop(input, 5), "\u{2AD0}"))
    "csupe;" <> _ -> Ok(#(list.drop(input, 6), "\u{2AD2}"))
    "ctdot;" <> _ -> Ok(#(list.drop(input, 6), "\u{22EF}"))
    "cudarrl;" <> _ -> Ok(#(list.drop(input, 8), "\u{2938}"))
    "cudarrr;" <> _ -> Ok(#(list.drop(input, 8), "\u{2935}"))
    "cuepr;" <> _ -> Ok(#(list.drop(input, 6), "\u{22DE}"))
    "cuesc;" <> _ -> Ok(#(list.drop(input, 6), "\u{22DF}"))
    "cularr;" <> _ -> Ok(#(list.drop(input, 7), "\u{21B6}"))
    "cularrp;" <> _ -> Ok(#(list.drop(input, 8), "\u{293D}"))
    "cup;" <> _ -> Ok(#(list.drop(input, 4), "\u{222A}"))
    "cupbrcap;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A48}"))
    "cupcap;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A46}"))
    "cupcup;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A4A}"))
    "cupdot;" <> _ -> Ok(#(list.drop(input, 7), "\u{228D}"))
    "cupor;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A45}"))
    "cups;" <> _ -> Ok(#(list.drop(input, 5), "\u{222A}\u{FE00}"))
    "curarr;" <> _ -> Ok(#(list.drop(input, 7), "\u{21B7}"))
    "curarrm;" <> _ -> Ok(#(list.drop(input, 8), "\u{293C}"))
    "curlyeqprec;" <> _ -> Ok(#(list.drop(input, 12), "\u{22DE}"))
    "curlyeqsucc;" <> _ -> Ok(#(list.drop(input, 12), "\u{22DF}"))
    "curlyvee;" <> _ -> Ok(#(list.drop(input, 9), "\u{22CE}"))
    "curlywedge;" <> _ -> Ok(#(list.drop(input, 11), "\u{22CF}"))
    "curren;" <> _ -> Ok(#(list.drop(input, 7), "\u{A4}"))
    "curvearrowleft;" <> _ -> Ok(#(list.drop(input, 15), "\u{21B6}"))
    "curvearrowright;" <> _ -> Ok(#(list.drop(input, 16), "\u{21B7}"))
    "cuvee;" <> _ -> Ok(#(list.drop(input, 6), "\u{22CE}"))
    "cuwed;" <> _ -> Ok(#(list.drop(input, 6), "\u{22CF}"))
    "cwconint;" <> _ -> Ok(#(list.drop(input, 9), "\u{2232}"))
    "cwint;" <> _ -> Ok(#(list.drop(input, 6), "\u{2231}"))
    "cylcty;" <> _ -> Ok(#(list.drop(input, 7), "\u{232D}"))
    _ -> Error(Nil)
  }
}

fn match_d(entity: String, input: List(String)) {
  case entity {
    "dArr;" <> _ -> Ok(#(list.drop(input, 5), "\u{21D3}"))
    "dHar;" <> _ -> Ok(#(list.drop(input, 5), "\u{2965}"))
    "dagger;" <> _ -> Ok(#(list.drop(input, 7), "\u{2020}"))
    "daleth;" <> _ -> Ok(#(list.drop(input, 7), "\u{2138}"))
    "darr;" <> _ -> Ok(#(list.drop(input, 5), "\u{2193}"))
    "dash;" <> _ -> Ok(#(list.drop(input, 5), "\u{2010}"))
    "dashv;" <> _ -> Ok(#(list.drop(input, 6), "\u{22A3}"))
    "dbkarow;" <> _ -> Ok(#(list.drop(input, 8), "\u{290F}"))
    "dblac;" <> _ -> Ok(#(list.drop(input, 6), "\u{2DD}"))
    "dcaron;" <> _ -> Ok(#(list.drop(input, 7), "\u{10F}"))
    "dcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{434}"))
    "dd;" <> _ -> Ok(#(list.drop(input, 3), "\u{2146}"))
    "ddagger;" <> _ -> Ok(#(list.drop(input, 8), "\u{2021}"))
    "ddarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21CA}"))
    "ddotseq;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A77}"))
    "deg;" <> _ -> Ok(#(list.drop(input, 4), "\u{B0}"))
    "delta;" <> _ -> Ok(#(list.drop(input, 6), "\u{3B4}"))
    "demptyv;" <> _ -> Ok(#(list.drop(input, 8), "\u{29B1}"))
    "dfisht;" <> _ -> Ok(#(list.drop(input, 7), "\u{297F}"))
    "dfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D521}"))
    "dharl;" <> _ -> Ok(#(list.drop(input, 6), "\u{21C3}"))
    "dharr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21C2}"))
    "diam;" <> _ -> Ok(#(list.drop(input, 5), "\u{22C4}"))
    "diamond;" <> _ -> Ok(#(list.drop(input, 8), "\u{22C4}"))
    "diamondsuit;" <> _ -> Ok(#(list.drop(input, 12), "\u{2666}"))
    "diams;" <> _ -> Ok(#(list.drop(input, 6), "\u{2666}"))
    "die;" <> _ -> Ok(#(list.drop(input, 4), "\u{A8}"))
    "digamma;" <> _ -> Ok(#(list.drop(input, 8), "\u{3DD}"))
    "disin;" <> _ -> Ok(#(list.drop(input, 6), "\u{22F2}"))
    "div;" <> _ -> Ok(#(list.drop(input, 4), "\u{F7}"))
    "divide;" <> _ -> Ok(#(list.drop(input, 7), "\u{F7}"))
    "divideontimes;" <> _ -> Ok(#(list.drop(input, 14), "\u{22C7}"))
    "divonx;" <> _ -> Ok(#(list.drop(input, 7), "\u{22C7}"))
    "djcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{452}"))
    "dlcorn;" <> _ -> Ok(#(list.drop(input, 7), "\u{231E}"))
    "dlcrop;" <> _ -> Ok(#(list.drop(input, 7), "\u{230D}"))
    "dollar;" <> _ -> Ok(#(list.drop(input, 7), "\u{24}"))
    "dopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D555}"))
    "dot;" <> _ -> Ok(#(list.drop(input, 4), "\u{2D9}"))
    "doteq;" <> _ -> Ok(#(list.drop(input, 6), "\u{2250}"))
    "doteqdot;" <> _ -> Ok(#(list.drop(input, 9), "\u{2251}"))
    "dotminus;" <> _ -> Ok(#(list.drop(input, 9), "\u{2238}"))
    "dotplus;" <> _ -> Ok(#(list.drop(input, 8), "\u{2214}"))
    "dotsquare;" <> _ -> Ok(#(list.drop(input, 10), "\u{22A1}"))
    "doublebarwedge;" <> _ -> Ok(#(list.drop(input, 15), "\u{2306}"))
    "downarrow;" <> _ -> Ok(#(list.drop(input, 10), "\u{2193}"))
    "downdownarrows;" <> _ -> Ok(#(list.drop(input, 15), "\u{21CA}"))
    "downharpoonleft;" <> _ -> Ok(#(list.drop(input, 16), "\u{21C3}"))
    "downharpoonright;" <> _ -> Ok(#(list.drop(input, 17), "\u{21C2}"))
    "drbkarow;" <> _ -> Ok(#(list.drop(input, 9), "\u{2910}"))
    "drcorn;" <> _ -> Ok(#(list.drop(input, 7), "\u{231F}"))
    "drcrop;" <> _ -> Ok(#(list.drop(input, 7), "\u{230C}"))
    "dscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4B9}"))
    "dscy;" <> _ -> Ok(#(list.drop(input, 5), "\u{455}"))
    "dsol;" <> _ -> Ok(#(list.drop(input, 5), "\u{29F6}"))
    "dstrok;" <> _ -> Ok(#(list.drop(input, 7), "\u{111}"))
    "dtdot;" <> _ -> Ok(#(list.drop(input, 6), "\u{22F1}"))
    "dtri;" <> _ -> Ok(#(list.drop(input, 5), "\u{25BF}"))
    "dtrif;" <> _ -> Ok(#(list.drop(input, 6), "\u{25BE}"))
    "duarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21F5}"))
    "duhar;" <> _ -> Ok(#(list.drop(input, 6), "\u{296F}"))
    "dwangle;" <> _ -> Ok(#(list.drop(input, 8), "\u{29A6}"))
    "dzcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{45F}"))
    "dzigrarr;" <> _ -> Ok(#(list.drop(input, 9), "\u{27FF}"))
    _ -> Error(Nil)
  }
}

fn match_e(entity: String, input: List(String)) {
  case entity {
    "eDDot;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A77}"))
    "eDot;" <> _ -> Ok(#(list.drop(input, 5), "\u{2251}"))
    "eacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{E9}"))
    "easter;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A6E}"))
    "ecaron;" <> _ -> Ok(#(list.drop(input, 7), "\u{11B}"))
    "ecir;" <> _ -> Ok(#(list.drop(input, 5), "\u{2256}"))
    "ecirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{EA}"))
    "ecolon;" <> _ -> Ok(#(list.drop(input, 7), "\u{2255}"))
    "ecy;" <> _ -> Ok(#(list.drop(input, 4), "\u{44D}"))
    "edot;" <> _ -> Ok(#(list.drop(input, 5), "\u{117}"))
    "ee;" <> _ -> Ok(#(list.drop(input, 3), "\u{2147}"))
    "efDot;" <> _ -> Ok(#(list.drop(input, 6), "\u{2252}"))
    "efr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D522}"))
    "eg;" <> _ -> Ok(#(list.drop(input, 3), "\u{2A9A}"))
    "egrave;" <> _ -> Ok(#(list.drop(input, 7), "\u{E8}"))
    "egs;" <> _ -> Ok(#(list.drop(input, 4), "\u{2A96}"))
    "egsdot;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A98}"))
    "el;" <> _ -> Ok(#(list.drop(input, 3), "\u{2A99}"))
    "elinters;" <> _ -> Ok(#(list.drop(input, 9), "\u{23E7}"))
    "ell;" <> _ -> Ok(#(list.drop(input, 4), "\u{2113}"))
    "els;" <> _ -> Ok(#(list.drop(input, 4), "\u{2A95}"))
    "elsdot;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A97}"))
    "emacr;" <> _ -> Ok(#(list.drop(input, 6), "\u{113}"))
    "empty;" <> _ -> Ok(#(list.drop(input, 6), "\u{2205}"))
    "emptyset;" <> _ -> Ok(#(list.drop(input, 9), "\u{2205}"))
    "emptyv;" <> _ -> Ok(#(list.drop(input, 7), "\u{2205}"))
    "emsp13;" <> _ -> Ok(#(list.drop(input, 7), "\u{2004}"))
    "emsp14;" <> _ -> Ok(#(list.drop(input, 7), "\u{2005}"))
    "emsp;" <> _ -> Ok(#(list.drop(input, 5), "\u{2003}"))
    "eng;" <> _ -> Ok(#(list.drop(input, 4), "\u{14B}"))
    "ensp;" <> _ -> Ok(#(list.drop(input, 5), "\u{2002}"))
    "eogon;" <> _ -> Ok(#(list.drop(input, 6), "\u{119}"))
    "eopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D556}"))
    "epar;" <> _ -> Ok(#(list.drop(input, 5), "\u{22D5}"))
    "eparsl;" <> _ -> Ok(#(list.drop(input, 7), "\u{29E3}"))
    "eplus;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A71}"))
    "epsi;" <> _ -> Ok(#(list.drop(input, 5), "\u{3B5}"))
    "epsilon;" <> _ -> Ok(#(list.drop(input, 8), "\u{3B5}"))
    "epsiv;" <> _ -> Ok(#(list.drop(input, 6), "\u{3F5}"))
    "eqcirc;" <> _ -> Ok(#(list.drop(input, 7), "\u{2256}"))
    "eqcolon;" <> _ -> Ok(#(list.drop(input, 8), "\u{2255}"))
    "eqsim;" <> _ -> Ok(#(list.drop(input, 6), "\u{2242}"))
    "eqslantgtr;" <> _ -> Ok(#(list.drop(input, 11), "\u{2A96}"))
    "eqslantless;" <> _ -> Ok(#(list.drop(input, 12), "\u{2A95}"))
    "equals;" <> _ -> Ok(#(list.drop(input, 7), "\u{3D}"))
    "equest;" <> _ -> Ok(#(list.drop(input, 7), "\u{225F}"))
    "equiv;" <> _ -> Ok(#(list.drop(input, 6), "\u{2261}"))
    "equivDD;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A78}"))
    "eqvparsl;" <> _ -> Ok(#(list.drop(input, 9), "\u{29E5}"))
    "erDot;" <> _ -> Ok(#(list.drop(input, 6), "\u{2253}"))
    "erarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{2971}"))
    "escr;" <> _ -> Ok(#(list.drop(input, 5), "\u{212F}"))
    "esdot;" <> _ -> Ok(#(list.drop(input, 6), "\u{2250}"))
    "esim;" <> _ -> Ok(#(list.drop(input, 5), "\u{2242}"))
    "eta;" <> _ -> Ok(#(list.drop(input, 4), "\u{3B7}"))
    "eth;" <> _ -> Ok(#(list.drop(input, 4), "\u{F0}"))
    "euml;" <> _ -> Ok(#(list.drop(input, 5), "\u{EB}"))
    "euro;" <> _ -> Ok(#(list.drop(input, 5), "\u{20AC}"))
    "excl;" <> _ -> Ok(#(list.drop(input, 5), "\u{21}"))
    "exist;" <> _ -> Ok(#(list.drop(input, 6), "\u{2203}"))
    "expectation;" <> _ -> Ok(#(list.drop(input, 12), "\u{2130}"))
    "exponentiale;" <> _ -> Ok(#(list.drop(input, 13), "\u{2147}"))
    _ -> Error(Nil)
  }
}

fn match_f(entity: String, input: List(String)) {
  case entity {
    "fallingdotseq;" <> _ -> Ok(#(list.drop(input, 14), "\u{2252}"))
    "fcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{444}"))
    "female;" <> _ -> Ok(#(list.drop(input, 7), "\u{2640}"))
    "ffilig;" <> _ -> Ok(#(list.drop(input, 7), "\u{FB03}"))
    "fflig;" <> _ -> Ok(#(list.drop(input, 6), "\u{FB00}"))
    "ffllig;" <> _ -> Ok(#(list.drop(input, 7), "\u{FB04}"))
    "ffr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D523}"))
    "filig;" <> _ -> Ok(#(list.drop(input, 6), "\u{FB01}"))
    "fjlig;" <> _ -> Ok(#(list.drop(input, 6), "\u{66}\u{6A}"))
    "flat;" <> _ -> Ok(#(list.drop(input, 5), "\u{266D}"))
    "fllig;" <> _ -> Ok(#(list.drop(input, 6), "\u{FB02}"))
    "fltns;" <> _ -> Ok(#(list.drop(input, 6), "\u{25B1}"))
    "fnof;" <> _ -> Ok(#(list.drop(input, 5), "\u{192}"))
    "fopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D557}"))
    "forall;" <> _ -> Ok(#(list.drop(input, 7), "\u{2200}"))
    "fork;" <> _ -> Ok(#(list.drop(input, 5), "\u{22D4}"))
    "forkv;" <> _ -> Ok(#(list.drop(input, 6), "\u{2AD9}"))
    "fpartint;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A0D}"))
    "frac12;" <> _ -> Ok(#(list.drop(input, 7), "\u{BD}"))
    "frac13;" <> _ -> Ok(#(list.drop(input, 7), "\u{2153}"))
    "frac14;" <> _ -> Ok(#(list.drop(input, 7), "\u{BC}"))
    "frac15;" <> _ -> Ok(#(list.drop(input, 7), "\u{2155}"))
    "frac16;" <> _ -> Ok(#(list.drop(input, 7), "\u{2159}"))
    "frac18;" <> _ -> Ok(#(list.drop(input, 7), "\u{215B}"))
    "frac23;" <> _ -> Ok(#(list.drop(input, 7), "\u{2154}"))
    "frac25;" <> _ -> Ok(#(list.drop(input, 7), "\u{2156}"))
    "frac34;" <> _ -> Ok(#(list.drop(input, 7), "\u{BE}"))
    "frac35;" <> _ -> Ok(#(list.drop(input, 7), "\u{2157}"))
    "frac38;" <> _ -> Ok(#(list.drop(input, 7), "\u{215C}"))
    "frac45;" <> _ -> Ok(#(list.drop(input, 7), "\u{2158}"))
    "frac56;" <> _ -> Ok(#(list.drop(input, 7), "\u{215A}"))
    "frac58;" <> _ -> Ok(#(list.drop(input, 7), "\u{215D}"))
    "frac78;" <> _ -> Ok(#(list.drop(input, 7), "\u{215E}"))
    "frasl;" <> _ -> Ok(#(list.drop(input, 6), "\u{2044}"))
    "frown;" <> _ -> Ok(#(list.drop(input, 6), "\u{2322}"))
    "fscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4BB}"))
    _ -> Error(Nil)
  }
}

fn match_g(entity: String, input: List(String)) {
  case entity {
    "gE;" <> _ -> Ok(#(list.drop(input, 3), "\u{2267}"))
    "gEl;" <> _ -> Ok(#(list.drop(input, 4), "\u{2A8C}"))
    "gacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{1F5}"))
    "gamma;" <> _ -> Ok(#(list.drop(input, 6), "\u{3B3}"))
    "gammad;" <> _ -> Ok(#(list.drop(input, 7), "\u{3DD}"))
    "gap;" <> _ -> Ok(#(list.drop(input, 4), "\u{2A86}"))
    "gbreve;" <> _ -> Ok(#(list.drop(input, 7), "\u{11F}"))
    "gcirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{11D}"))
    "gcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{433}"))
    "gdot;" <> _ -> Ok(#(list.drop(input, 5), "\u{121}"))
    "ge;" <> _ -> Ok(#(list.drop(input, 3), "\u{2265}"))
    "gel;" <> _ -> Ok(#(list.drop(input, 4), "\u{22DB}"))
    "geq;" <> _ -> Ok(#(list.drop(input, 4), "\u{2265}"))
    "geqq;" <> _ -> Ok(#(list.drop(input, 5), "\u{2267}"))
    "geqslant;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A7E}"))
    "ges;" <> _ -> Ok(#(list.drop(input, 4), "\u{2A7E}"))
    "gescc;" <> _ -> Ok(#(list.drop(input, 6), "\u{2AA9}"))
    "gesdot;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A80}"))
    "gesdoto;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A82}"))
    "gesdotol;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A84}"))
    "gesl;" <> _ -> Ok(#(list.drop(input, 5), "\u{22DB}\u{FE00}"))
    "gesles;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A94}"))
    "gfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D524}"))
    "gg;" <> _ -> Ok(#(list.drop(input, 3), "\u{226B}"))
    "ggg;" <> _ -> Ok(#(list.drop(input, 4), "\u{22D9}"))
    "gimel;" <> _ -> Ok(#(list.drop(input, 6), "\u{2137}"))
    "gjcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{453}"))
    "gl;" <> _ -> Ok(#(list.drop(input, 3), "\u{2277}"))
    "glE;" <> _ -> Ok(#(list.drop(input, 4), "\u{2A92}"))
    "gla;" <> _ -> Ok(#(list.drop(input, 4), "\u{2AA5}"))
    "glj;" <> _ -> Ok(#(list.drop(input, 4), "\u{2AA4}"))
    "gnE;" <> _ -> Ok(#(list.drop(input, 4), "\u{2269}"))
    "gnap;" <> _ -> Ok(#(list.drop(input, 5), "\u{2A8A}"))
    "gnapprox;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A8A}"))
    "gne;" <> _ -> Ok(#(list.drop(input, 4), "\u{2A88}"))
    "gneq;" <> _ -> Ok(#(list.drop(input, 5), "\u{2A88}"))
    "gneqq;" <> _ -> Ok(#(list.drop(input, 6), "\u{2269}"))
    "gnsim;" <> _ -> Ok(#(list.drop(input, 6), "\u{22E7}"))
    "gopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D558}"))
    "grave;" <> _ -> Ok(#(list.drop(input, 6), "\u{60}"))
    "gscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{210A}"))
    "gsim;" <> _ -> Ok(#(list.drop(input, 5), "\u{2273}"))
    "gsime;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A8E}"))
    "gsiml;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A90}"))
    "gt;" <> _ -> Ok(#(list.drop(input, 3), "\u{3E}"))
    "gtcc;" <> _ -> Ok(#(list.drop(input, 5), "\u{2AA7}"))
    "gtcir;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A7A}"))
    "gtdot;" <> _ -> Ok(#(list.drop(input, 6), "\u{22D7}"))
    "gtlPar;" <> _ -> Ok(#(list.drop(input, 7), "\u{2995}"))
    "gtquest;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A7C}"))
    "gtrapprox;" <> _ -> Ok(#(list.drop(input, 10), "\u{2A86}"))
    "gtrarr;" <> _ -> Ok(#(list.drop(input, 7), "\u{2978}"))
    "gtrdot;" <> _ -> Ok(#(list.drop(input, 7), "\u{22D7}"))
    "gtreqless;" <> _ -> Ok(#(list.drop(input, 10), "\u{22DB}"))
    "gtreqqless;" <> _ -> Ok(#(list.drop(input, 11), "\u{2A8C}"))
    "gtrless;" <> _ -> Ok(#(list.drop(input, 8), "\u{2277}"))
    "gtrsim;" <> _ -> Ok(#(list.drop(input, 7), "\u{2273}"))
    "gvertneqq;" <> _ -> Ok(#(list.drop(input, 10), "\u{2269}\u{FE00}"))
    "gvnE;" <> _ -> Ok(#(list.drop(input, 5), "\u{2269}\u{FE00}"))
    _ -> Error(Nil)
  }
}

fn match_h(entity: String, input: List(String)) {
  case entity {
    "hArr;" <> _ -> Ok(#(list.drop(input, 5), "\u{21D4}"))
    "hairsp;" <> _ -> Ok(#(list.drop(input, 7), "\u{200A}"))
    "half;" <> _ -> Ok(#(list.drop(input, 5), "\u{BD}"))
    "hamilt;" <> _ -> Ok(#(list.drop(input, 7), "\u{210B}"))
    "hardcy;" <> _ -> Ok(#(list.drop(input, 7), "\u{44A}"))
    "harr;" <> _ -> Ok(#(list.drop(input, 5), "\u{2194}"))
    "harrcir;" <> _ -> Ok(#(list.drop(input, 8), "\u{2948}"))
    "harrw;" <> _ -> Ok(#(list.drop(input, 6), "\u{21AD}"))
    "hbar;" <> _ -> Ok(#(list.drop(input, 5), "\u{210F}"))
    "hcirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{125}"))
    "hearts;" <> _ -> Ok(#(list.drop(input, 7), "\u{2665}"))
    "heartsuit;" <> _ -> Ok(#(list.drop(input, 10), "\u{2665}"))
    "hellip;" <> _ -> Ok(#(list.drop(input, 7), "\u{2026}"))
    "hercon;" <> _ -> Ok(#(list.drop(input, 7), "\u{22B9}"))
    "hfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D525}"))
    "hksearow;" <> _ -> Ok(#(list.drop(input, 9), "\u{2925}"))
    "hkswarow;" <> _ -> Ok(#(list.drop(input, 9), "\u{2926}"))
    "hoarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21FF}"))
    "homtht;" <> _ -> Ok(#(list.drop(input, 7), "\u{223B}"))
    "hookleftarrow;" <> _ -> Ok(#(list.drop(input, 14), "\u{21A9}"))
    "hookrightarrow;" <> _ -> Ok(#(list.drop(input, 15), "\u{21AA}"))
    "hopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D559}"))
    "horbar;" <> _ -> Ok(#(list.drop(input, 7), "\u{2015}"))
    "hscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4BD}"))
    "hslash;" <> _ -> Ok(#(list.drop(input, 7), "\u{210F}"))
    "hstrok;" <> _ -> Ok(#(list.drop(input, 7), "\u{127}"))
    "hybull;" <> _ -> Ok(#(list.drop(input, 7), "\u{2043}"))
    "hyphen;" <> _ -> Ok(#(list.drop(input, 7), "\u{2010}"))
    _ -> Error(Nil)
  }
}

fn match_i(entity: String, input: List(String)) {
  case entity {
    "iacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{ED}"))
    "ic;" <> _ -> Ok(#(list.drop(input, 3), "\u{2063}"))
    "icirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{EE}"))
    "icy;" <> _ -> Ok(#(list.drop(input, 4), "\u{438}"))
    "iecy;" <> _ -> Ok(#(list.drop(input, 5), "\u{435}"))
    "iexcl;" <> _ -> Ok(#(list.drop(input, 6), "\u{A1}"))
    "iff;" <> _ -> Ok(#(list.drop(input, 4), "\u{21D4}"))
    "ifr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D526}"))
    "igrave;" <> _ -> Ok(#(list.drop(input, 7), "\u{EC}"))
    "ii;" <> _ -> Ok(#(list.drop(input, 3), "\u{2148}"))
    "iiiint;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A0C}"))
    "iiint;" <> _ -> Ok(#(list.drop(input, 6), "\u{222D}"))
    "iinfin;" <> _ -> Ok(#(list.drop(input, 7), "\u{29DC}"))
    "iiota;" <> _ -> Ok(#(list.drop(input, 6), "\u{2129}"))
    "ijlig;" <> _ -> Ok(#(list.drop(input, 6), "\u{133}"))
    "imacr;" <> _ -> Ok(#(list.drop(input, 6), "\u{12B}"))
    "image;" <> _ -> Ok(#(list.drop(input, 6), "\u{2111}"))
    "imagline;" <> _ -> Ok(#(list.drop(input, 9), "\u{2110}"))
    "imagpart;" <> _ -> Ok(#(list.drop(input, 9), "\u{2111}"))
    "imath;" <> _ -> Ok(#(list.drop(input, 6), "\u{131}"))
    "imof;" <> _ -> Ok(#(list.drop(input, 5), "\u{22B7}"))
    "imped;" <> _ -> Ok(#(list.drop(input, 6), "\u{1B5}"))
    "in;" <> _ -> Ok(#(list.drop(input, 3), "\u{2208}"))
    "incare;" <> _ -> Ok(#(list.drop(input, 7), "\u{2105}"))
    "infin;" <> _ -> Ok(#(list.drop(input, 6), "\u{221E}"))
    "infintie;" <> _ -> Ok(#(list.drop(input, 9), "\u{29DD}"))
    "inodot;" <> _ -> Ok(#(list.drop(input, 7), "\u{131}"))
    "int;" <> _ -> Ok(#(list.drop(input, 4), "\u{222B}"))
    "intcal;" <> _ -> Ok(#(list.drop(input, 7), "\u{22BA}"))
    "integers;" <> _ -> Ok(#(list.drop(input, 9), "\u{2124}"))
    "intercal;" <> _ -> Ok(#(list.drop(input, 9), "\u{22BA}"))
    "intlarhk;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A17}"))
    "intprod;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A3C}"))
    "iocy;" <> _ -> Ok(#(list.drop(input, 5), "\u{451}"))
    "iogon;" <> _ -> Ok(#(list.drop(input, 6), "\u{12F}"))
    "iopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D55A}"))
    "iota;" <> _ -> Ok(#(list.drop(input, 5), "\u{3B9}"))
    "iprod;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A3C}"))
    "iquest;" <> _ -> Ok(#(list.drop(input, 7), "\u{BF}"))
    "iscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4BE}"))
    "isin;" <> _ -> Ok(#(list.drop(input, 5), "\u{2208}"))
    "isinE;" <> _ -> Ok(#(list.drop(input, 6), "\u{22F9}"))
    "isindot;" <> _ -> Ok(#(list.drop(input, 8), "\u{22F5}"))
    "isins;" <> _ -> Ok(#(list.drop(input, 6), "\u{22F4}"))
    "isinsv;" <> _ -> Ok(#(list.drop(input, 7), "\u{22F3}"))
    "isinv;" <> _ -> Ok(#(list.drop(input, 6), "\u{2208}"))
    "it;" <> _ -> Ok(#(list.drop(input, 3), "\u{2062}"))
    "itilde;" <> _ -> Ok(#(list.drop(input, 7), "\u{129}"))
    "iukcy;" <> _ -> Ok(#(list.drop(input, 6), "\u{456}"))
    "iuml;" <> _ -> Ok(#(list.drop(input, 5), "\u{EF}"))
    _ -> Error(Nil)
  }
}

fn match_j(entity: String, input: List(String)) {
  case entity {
    "jcirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{135}"))
    "jcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{439}"))
    "jfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D527}"))
    "jmath;" <> _ -> Ok(#(list.drop(input, 6), "\u{237}"))
    "jopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D55B}"))
    "jscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4BF}"))
    "jsercy;" <> _ -> Ok(#(list.drop(input, 7), "\u{458}"))
    "jukcy;" <> _ -> Ok(#(list.drop(input, 6), "\u{454}"))
    _ -> Error(Nil)
  }
}

fn match_k(entity: String, input: List(String)) {
  case entity {
    "kappa;" <> _ -> Ok(#(list.drop(input, 6), "\u{3BA}"))
    "kappav;" <> _ -> Ok(#(list.drop(input, 7), "\u{3F0}"))
    "kcedil;" <> _ -> Ok(#(list.drop(input, 7), "\u{137}"))
    "kcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{43A}"))
    "kfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D528}"))
    "kgreen;" <> _ -> Ok(#(list.drop(input, 7), "\u{138}"))
    "khcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{445}"))
    "kjcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{45C}"))
    "kopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D55C}"))
    "kscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4C0}"))
    _ -> Error(Nil)
  }
}

fn match_l(entity: String, input: List(String)) {
  case entity {
    "lAarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21DA}"))
    "lArr;" <> _ -> Ok(#(list.drop(input, 5), "\u{21D0}"))
    "lAtail;" <> _ -> Ok(#(list.drop(input, 7), "\u{291B}"))
    "lBarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{290E}"))
    "lE;" <> _ -> Ok(#(list.drop(input, 3), "\u{2266}"))
    "lEg;" <> _ -> Ok(#(list.drop(input, 4), "\u{2A8B}"))
    "lHar;" <> _ -> Ok(#(list.drop(input, 5), "\u{2962}"))
    "lacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{13A}"))
    "laemptyv;" <> _ -> Ok(#(list.drop(input, 9), "\u{29B4}"))
    "lagran;" <> _ -> Ok(#(list.drop(input, 7), "\u{2112}"))
    "lambda;" <> _ -> Ok(#(list.drop(input, 7), "\u{3BB}"))
    "lang;" <> _ -> Ok(#(list.drop(input, 5), "\u{27E8}"))
    "langd;" <> _ -> Ok(#(list.drop(input, 6), "\u{2991}"))
    "langle;" <> _ -> Ok(#(list.drop(input, 7), "\u{27E8}"))
    "lap;" <> _ -> Ok(#(list.drop(input, 4), "\u{2A85}"))
    "laquo;" <> _ -> Ok(#(list.drop(input, 6), "\u{AB}"))
    "larr;" <> _ -> Ok(#(list.drop(input, 5), "\u{2190}"))
    "larrb;" <> _ -> Ok(#(list.drop(input, 6), "\u{21E4}"))
    "larrbfs;" <> _ -> Ok(#(list.drop(input, 8), "\u{291F}"))
    "larrfs;" <> _ -> Ok(#(list.drop(input, 7), "\u{291D}"))
    "larrhk;" <> _ -> Ok(#(list.drop(input, 7), "\u{21A9}"))
    "larrlp;" <> _ -> Ok(#(list.drop(input, 7), "\u{21AB}"))
    "larrpl;" <> _ -> Ok(#(list.drop(input, 7), "\u{2939}"))
    "larrsim;" <> _ -> Ok(#(list.drop(input, 8), "\u{2973}"))
    "larrtl;" <> _ -> Ok(#(list.drop(input, 7), "\u{21A2}"))
    "lat;" <> _ -> Ok(#(list.drop(input, 4), "\u{2AAB}"))
    "latail;" <> _ -> Ok(#(list.drop(input, 7), "\u{2919}"))
    "late;" <> _ -> Ok(#(list.drop(input, 5), "\u{2AAD}"))
    "lates;" <> _ -> Ok(#(list.drop(input, 6), "\u{2AAD}\u{FE00}"))
    "lbarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{290C}"))
    "lbbrk;" <> _ -> Ok(#(list.drop(input, 6), "\u{2772}"))
    "lbrace;" <> _ -> Ok(#(list.drop(input, 7), "\u{7B}"))
    "lbrack;" <> _ -> Ok(#(list.drop(input, 7), "\u{5B}"))
    "lbrke;" <> _ -> Ok(#(list.drop(input, 6), "\u{298B}"))
    "lbrksld;" <> _ -> Ok(#(list.drop(input, 8), "\u{298F}"))
    "lbrkslu;" <> _ -> Ok(#(list.drop(input, 8), "\u{298D}"))
    "lcaron;" <> _ -> Ok(#(list.drop(input, 7), "\u{13E}"))
    "lcedil;" <> _ -> Ok(#(list.drop(input, 7), "\u{13C}"))
    "lceil;" <> _ -> Ok(#(list.drop(input, 6), "\u{2308}"))
    "lcub;" <> _ -> Ok(#(list.drop(input, 5), "\u{7B}"))
    "lcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{43B}"))
    "ldca;" <> _ -> Ok(#(list.drop(input, 5), "\u{2936}"))
    "ldquo;" <> _ -> Ok(#(list.drop(input, 6), "\u{201C}"))
    "ldquor;" <> _ -> Ok(#(list.drop(input, 7), "\u{201E}"))
    "ldrdhar;" <> _ -> Ok(#(list.drop(input, 8), "\u{2967}"))
    "ldrushar;" <> _ -> Ok(#(list.drop(input, 9), "\u{294B}"))
    "ldsh;" <> _ -> Ok(#(list.drop(input, 5), "\u{21B2}"))
    "le;" <> _ -> Ok(#(list.drop(input, 3), "\u{2264}"))
    "leftarrow;" <> _ -> Ok(#(list.drop(input, 10), "\u{2190}"))
    "leftarrowtail;" <> _ -> Ok(#(list.drop(input, 14), "\u{21A2}"))
    "leftharpoondown;" <> _ -> Ok(#(list.drop(input, 16), "\u{21BD}"))
    "leftharpoonup;" <> _ -> Ok(#(list.drop(input, 14), "\u{21BC}"))
    "leftleftarrows;" <> _ -> Ok(#(list.drop(input, 15), "\u{21C7}"))
    "leftrightarrow;" <> _ -> Ok(#(list.drop(input, 15), "\u{2194}"))
    "leftrightarrows;" <> _ -> Ok(#(list.drop(input, 16), "\u{21C6}"))
    "leftrightharpoons;" <> _ -> Ok(#(list.drop(input, 18), "\u{21CB}"))
    "leftrightsquigarrow;" <> _ -> Ok(#(list.drop(input, 20), "\u{21AD}"))
    "leftthreetimes;" <> _ -> Ok(#(list.drop(input, 15), "\u{22CB}"))
    "leg;" <> _ -> Ok(#(list.drop(input, 4), "\u{22DA}"))
    "leq;" <> _ -> Ok(#(list.drop(input, 4), "\u{2264}"))
    "leqq;" <> _ -> Ok(#(list.drop(input, 5), "\u{2266}"))
    "leqslant;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A7D}"))
    "les;" <> _ -> Ok(#(list.drop(input, 4), "\u{2A7D}"))
    "lescc;" <> _ -> Ok(#(list.drop(input, 6), "\u{2AA8}"))
    "lesdot;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A7F}"))
    "lesdoto;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A81}"))
    "lesdotor;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A83}"))
    "lesg;" <> _ -> Ok(#(list.drop(input, 5), "\u{22DA}\u{FE00}"))
    "lesges;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A93}"))
    "lessapprox;" <> _ -> Ok(#(list.drop(input, 11), "\u{2A85}"))
    "lessdot;" <> _ -> Ok(#(list.drop(input, 8), "\u{22D6}"))
    "lesseqgtr;" <> _ -> Ok(#(list.drop(input, 10), "\u{22DA}"))
    "lesseqqgtr;" <> _ -> Ok(#(list.drop(input, 11), "\u{2A8B}"))
    "lessgtr;" <> _ -> Ok(#(list.drop(input, 8), "\u{2276}"))
    "lesssim;" <> _ -> Ok(#(list.drop(input, 8), "\u{2272}"))
    "lfisht;" <> _ -> Ok(#(list.drop(input, 7), "\u{297C}"))
    "lfloor;" <> _ -> Ok(#(list.drop(input, 7), "\u{230A}"))
    "lfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D529}"))
    "lg;" <> _ -> Ok(#(list.drop(input, 3), "\u{2276}"))
    "lgE;" <> _ -> Ok(#(list.drop(input, 4), "\u{2A91}"))
    "lhard;" <> _ -> Ok(#(list.drop(input, 6), "\u{21BD}"))
    "lharu;" <> _ -> Ok(#(list.drop(input, 6), "\u{21BC}"))
    "lharul;" <> _ -> Ok(#(list.drop(input, 7), "\u{296A}"))
    "lhblk;" <> _ -> Ok(#(list.drop(input, 6), "\u{2584}"))
    "ljcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{459}"))
    "ll;" <> _ -> Ok(#(list.drop(input, 3), "\u{226A}"))
    "llarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21C7}"))
    "llcorner;" <> _ -> Ok(#(list.drop(input, 9), "\u{231E}"))
    "llhard;" <> _ -> Ok(#(list.drop(input, 7), "\u{296B}"))
    "lltri;" <> _ -> Ok(#(list.drop(input, 6), "\u{25FA}"))
    "lmidot;" <> _ -> Ok(#(list.drop(input, 7), "\u{140}"))
    "lmoust;" <> _ -> Ok(#(list.drop(input, 7), "\u{23B0}"))
    "lmoustache;" <> _ -> Ok(#(list.drop(input, 11), "\u{23B0}"))
    "lnE;" <> _ -> Ok(#(list.drop(input, 4), "\u{2268}"))
    "lnap;" <> _ -> Ok(#(list.drop(input, 5), "\u{2A89}"))
    "lnapprox;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A89}"))
    "lne;" <> _ -> Ok(#(list.drop(input, 4), "\u{2A87}"))
    "lneq;" <> _ -> Ok(#(list.drop(input, 5), "\u{2A87}"))
    "lneqq;" <> _ -> Ok(#(list.drop(input, 6), "\u{2268}"))
    "lnsim;" <> _ -> Ok(#(list.drop(input, 6), "\u{22E6}"))
    "loang;" <> _ -> Ok(#(list.drop(input, 6), "\u{27EC}"))
    "loarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21FD}"))
    "lobrk;" <> _ -> Ok(#(list.drop(input, 6), "\u{27E6}"))
    "longleftarrow;" <> _ -> Ok(#(list.drop(input, 14), "\u{27F5}"))
    "longleftrightarrow;" <> _ -> Ok(#(list.drop(input, 19), "\u{27F7}"))
    "longmapsto;" <> _ -> Ok(#(list.drop(input, 11), "\u{27FC}"))
    "longrightarrow;" <> _ -> Ok(#(list.drop(input, 15), "\u{27F6}"))
    "looparrowleft;" <> _ -> Ok(#(list.drop(input, 14), "\u{21AB}"))
    "looparrowright;" <> _ -> Ok(#(list.drop(input, 15), "\u{21AC}"))
    "lopar;" <> _ -> Ok(#(list.drop(input, 6), "\u{2985}"))
    "lopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D55D}"))
    "loplus;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A2D}"))
    "lotimes;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A34}"))
    "lowast;" <> _ -> Ok(#(list.drop(input, 7), "\u{2217}"))
    "lowbar;" <> _ -> Ok(#(list.drop(input, 7), "\u{5F}"))
    "loz;" <> _ -> Ok(#(list.drop(input, 4), "\u{25CA}"))
    "lozenge;" <> _ -> Ok(#(list.drop(input, 8), "\u{25CA}"))
    "lozf;" <> _ -> Ok(#(list.drop(input, 5), "\u{29EB}"))
    "lpar;" <> _ -> Ok(#(list.drop(input, 5), "\u{28}"))
    "lparlt;" <> _ -> Ok(#(list.drop(input, 7), "\u{2993}"))
    "lrarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21C6}"))
    "lrcorner;" <> _ -> Ok(#(list.drop(input, 9), "\u{231F}"))
    "lrhar;" <> _ -> Ok(#(list.drop(input, 6), "\u{21CB}"))
    "lrhard;" <> _ -> Ok(#(list.drop(input, 7), "\u{296D}"))
    "lrm;" <> _ -> Ok(#(list.drop(input, 4), "\u{200E}"))
    "lrtri;" <> _ -> Ok(#(list.drop(input, 6), "\u{22BF}"))
    "lsaquo;" <> _ -> Ok(#(list.drop(input, 7), "\u{2039}"))
    "lscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4C1}"))
    "lsh;" <> _ -> Ok(#(list.drop(input, 4), "\u{21B0}"))
    "lsim;" <> _ -> Ok(#(list.drop(input, 5), "\u{2272}"))
    "lsime;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A8D}"))
    "lsimg;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A8F}"))
    "lsqb;" <> _ -> Ok(#(list.drop(input, 5), "\u{5B}"))
    "lsquo;" <> _ -> Ok(#(list.drop(input, 6), "\u{2018}"))
    "lsquor;" <> _ -> Ok(#(list.drop(input, 7), "\u{201A}"))
    "lstrok;" <> _ -> Ok(#(list.drop(input, 7), "\u{142}"))
    "lt;" <> _ -> Ok(#(list.drop(input, 3), "\u{3C}"))
    "ltcc;" <> _ -> Ok(#(list.drop(input, 5), "\u{2AA6}"))
    "ltcir;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A79}"))
    "ltdot;" <> _ -> Ok(#(list.drop(input, 6), "\u{22D6}"))
    "lthree;" <> _ -> Ok(#(list.drop(input, 7), "\u{22CB}"))
    "ltimes;" <> _ -> Ok(#(list.drop(input, 7), "\u{22C9}"))
    "ltlarr;" <> _ -> Ok(#(list.drop(input, 7), "\u{2976}"))
    "ltquest;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A7B}"))
    "ltrPar;" <> _ -> Ok(#(list.drop(input, 7), "\u{2996}"))
    "ltri;" <> _ -> Ok(#(list.drop(input, 5), "\u{25C3}"))
    "ltrie;" <> _ -> Ok(#(list.drop(input, 6), "\u{22B4}"))
    "ltrif;" <> _ -> Ok(#(list.drop(input, 6), "\u{25C2}"))
    "lurdshar;" <> _ -> Ok(#(list.drop(input, 9), "\u{294A}"))
    "luruhar;" <> _ -> Ok(#(list.drop(input, 8), "\u{2966}"))
    "lvertneqq;" <> _ -> Ok(#(list.drop(input, 10), "\u{2268}\u{FE00}"))
    "lvnE;" <> _ -> Ok(#(list.drop(input, 5), "\u{2268}\u{FE00}"))
    _ -> Error(Nil)
  }
}

fn match_m(entity: String, input: List(String)) {
  case entity {
    "mDDot;" <> _ -> Ok(#(list.drop(input, 6), "\u{223A}"))
    "macr;" <> _ -> Ok(#(list.drop(input, 5), "\u{AF}"))
    "male;" <> _ -> Ok(#(list.drop(input, 5), "\u{2642}"))
    "malt;" <> _ -> Ok(#(list.drop(input, 5), "\u{2720}"))
    "maltese;" <> _ -> Ok(#(list.drop(input, 8), "\u{2720}"))
    "map;" <> _ -> Ok(#(list.drop(input, 4), "\u{21A6}"))
    "mapsto;" <> _ -> Ok(#(list.drop(input, 7), "\u{21A6}"))
    "mapstodown;" <> _ -> Ok(#(list.drop(input, 11), "\u{21A7}"))
    "mapstoleft;" <> _ -> Ok(#(list.drop(input, 11), "\u{21A4}"))
    "mapstoup;" <> _ -> Ok(#(list.drop(input, 9), "\u{21A5}"))
    "marker;" <> _ -> Ok(#(list.drop(input, 7), "\u{25AE}"))
    "mcomma;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A29}"))
    "mcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{43C}"))
    "mdash;" <> _ -> Ok(#(list.drop(input, 6), "\u{2014}"))
    "measuredangle;" <> _ -> Ok(#(list.drop(input, 14), "\u{2221}"))
    "mfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D52A}"))
    "mho;" <> _ -> Ok(#(list.drop(input, 4), "\u{2127}"))
    "micro;" <> _ -> Ok(#(list.drop(input, 6), "\u{B5}"))
    "mid;" <> _ -> Ok(#(list.drop(input, 4), "\u{2223}"))
    "midast;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A}"))
    "midcir;" <> _ -> Ok(#(list.drop(input, 7), "\u{2AF0}"))
    "middot;" <> _ -> Ok(#(list.drop(input, 7), "\u{B7}"))
    "minus;" <> _ -> Ok(#(list.drop(input, 6), "\u{2212}"))
    "minusb;" <> _ -> Ok(#(list.drop(input, 7), "\u{229F}"))
    "minusd;" <> _ -> Ok(#(list.drop(input, 7), "\u{2238}"))
    "minusdu;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A2A}"))
    "mlcp;" <> _ -> Ok(#(list.drop(input, 5), "\u{2ADB}"))
    "mldr;" <> _ -> Ok(#(list.drop(input, 5), "\u{2026}"))
    "mnplus;" <> _ -> Ok(#(list.drop(input, 7), "\u{2213}"))
    "models;" <> _ -> Ok(#(list.drop(input, 7), "\u{22A7}"))
    "mopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D55E}"))
    "mp;" <> _ -> Ok(#(list.drop(input, 3), "\u{2213}"))
    "mscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4C2}"))
    "mstpos;" <> _ -> Ok(#(list.drop(input, 7), "\u{223E}"))
    "mu;" <> _ -> Ok(#(list.drop(input, 3), "\u{3BC}"))
    "multimap;" <> _ -> Ok(#(list.drop(input, 9), "\u{22B8}"))
    "mumap;" <> _ -> Ok(#(list.drop(input, 6), "\u{22B8}"))
    _ -> Error(Nil)
  }
}

fn match_n(entity: String, input: List(String)) {
  case entity {
    "nGg;" <> _ -> Ok(#(list.drop(input, 4), "\u{22D9}\u{338}"))
    "nGt;" <> _ -> Ok(#(list.drop(input, 4), "\u{226B}\u{20D2}"))
    "nGtv;" <> _ -> Ok(#(list.drop(input, 5), "\u{226B}\u{338}"))
    "nLeftarrow;" <> _ -> Ok(#(list.drop(input, 11), "\u{21CD}"))
    "nLeftrightarrow;" <> _ -> Ok(#(list.drop(input, 16), "\u{21CE}"))
    "nLl;" <> _ -> Ok(#(list.drop(input, 4), "\u{22D8}\u{338}"))
    "nLt;" <> _ -> Ok(#(list.drop(input, 4), "\u{226A}\u{20D2}"))
    "nLtv;" <> _ -> Ok(#(list.drop(input, 5), "\u{226A}\u{338}"))
    "nRightarrow;" <> _ -> Ok(#(list.drop(input, 12), "\u{21CF}"))
    "nVDash;" <> _ -> Ok(#(list.drop(input, 7), "\u{22AF}"))
    "nVdash;" <> _ -> Ok(#(list.drop(input, 7), "\u{22AE}"))
    "nabla;" <> _ -> Ok(#(list.drop(input, 6), "\u{2207}"))
    "nacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{144}"))
    "nang;" <> _ -> Ok(#(list.drop(input, 5), "\u{2220}\u{20D2}"))
    "nap;" <> _ -> Ok(#(list.drop(input, 4), "\u{2249}"))
    "napE;" <> _ -> Ok(#(list.drop(input, 5), "\u{2A70}\u{338}"))
    "napid;" <> _ -> Ok(#(list.drop(input, 6), "\u{224B}\u{338}"))
    "napos;" <> _ -> Ok(#(list.drop(input, 6), "\u{149}"))
    "napprox;" <> _ -> Ok(#(list.drop(input, 8), "\u{2249}"))
    "natur;" <> _ -> Ok(#(list.drop(input, 6), "\u{266E}"))
    "natural;" <> _ -> Ok(#(list.drop(input, 8), "\u{266E}"))
    "naturals;" <> _ -> Ok(#(list.drop(input, 9), "\u{2115}"))
    "nbsp;" <> _ -> Ok(#(list.drop(input, 5), "\u{A0}"))
    "nbump;" <> _ -> Ok(#(list.drop(input, 6), "\u{224E}\u{338}"))
    "nbumpe;" <> _ -> Ok(#(list.drop(input, 7), "\u{224F}\u{338}"))
    "ncap;" <> _ -> Ok(#(list.drop(input, 5), "\u{2A43}"))
    "ncaron;" <> _ -> Ok(#(list.drop(input, 7), "\u{148}"))
    "ncedil;" <> _ -> Ok(#(list.drop(input, 7), "\u{146}"))
    "ncong;" <> _ -> Ok(#(list.drop(input, 6), "\u{2247}"))
    "ncongdot;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A6D}\u{338}"))
    "ncup;" <> _ -> Ok(#(list.drop(input, 5), "\u{2A42}"))
    "ncy;" <> _ -> Ok(#(list.drop(input, 4), "\u{43D}"))
    "ndash;" <> _ -> Ok(#(list.drop(input, 6), "\u{2013}"))
    "ne;" <> _ -> Ok(#(list.drop(input, 3), "\u{2260}"))
    "neArr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21D7}"))
    "nearhk;" <> _ -> Ok(#(list.drop(input, 7), "\u{2924}"))
    "nearr;" <> _ -> Ok(#(list.drop(input, 6), "\u{2197}"))
    "nearrow;" <> _ -> Ok(#(list.drop(input, 8), "\u{2197}"))
    "nedot;" <> _ -> Ok(#(list.drop(input, 6), "\u{2250}\u{338}"))
    "nequiv;" <> _ -> Ok(#(list.drop(input, 7), "\u{2262}"))
    "nesear;" <> _ -> Ok(#(list.drop(input, 7), "\u{2928}"))
    "nesim;" <> _ -> Ok(#(list.drop(input, 6), "\u{2242}\u{338}"))
    "nexist;" <> _ -> Ok(#(list.drop(input, 7), "\u{2204}"))
    "nexists;" <> _ -> Ok(#(list.drop(input, 8), "\u{2204}"))
    "nfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D52B}"))
    "ngE;" <> _ -> Ok(#(list.drop(input, 4), "\u{2267}\u{338}"))
    "nge;" <> _ -> Ok(#(list.drop(input, 4), "\u{2271}"))
    "ngeq;" <> _ -> Ok(#(list.drop(input, 5), "\u{2271}"))
    "ngeqq;" <> _ -> Ok(#(list.drop(input, 6), "\u{2267}\u{338}"))
    "ngeqslant;" <> _ -> Ok(#(list.drop(input, 10), "\u{2A7E}\u{338}"))
    "nges;" <> _ -> Ok(#(list.drop(input, 5), "\u{2A7E}\u{338}"))
    "ngsim;" <> _ -> Ok(#(list.drop(input, 6), "\u{2275}"))
    "ngt;" <> _ -> Ok(#(list.drop(input, 4), "\u{226F}"))
    "ngtr;" <> _ -> Ok(#(list.drop(input, 5), "\u{226F}"))
    "nhArr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21CE}"))
    "nharr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21AE}"))
    "nhpar;" <> _ -> Ok(#(list.drop(input, 6), "\u{2AF2}"))
    "ni;" <> _ -> Ok(#(list.drop(input, 3), "\u{220B}"))
    "nis;" <> _ -> Ok(#(list.drop(input, 4), "\u{22FC}"))
    "nisd;" <> _ -> Ok(#(list.drop(input, 5), "\u{22FA}"))
    "niv;" <> _ -> Ok(#(list.drop(input, 4), "\u{220B}"))
    "njcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{45A}"))
    "nlArr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21CD}"))
    "nlE;" <> _ -> Ok(#(list.drop(input, 4), "\u{2266}\u{338}"))
    "nlarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{219A}"))
    "nldr;" <> _ -> Ok(#(list.drop(input, 5), "\u{2025}"))
    "nle;" <> _ -> Ok(#(list.drop(input, 4), "\u{2270}"))
    "nleftarrow;" <> _ -> Ok(#(list.drop(input, 11), "\u{219A}"))
    "nleftrightarrow;" <> _ -> Ok(#(list.drop(input, 16), "\u{21AE}"))
    "nleq;" <> _ -> Ok(#(list.drop(input, 5), "\u{2270}"))
    "nleqq;" <> _ -> Ok(#(list.drop(input, 6), "\u{2266}\u{338}"))
    "nleqslant;" <> _ -> Ok(#(list.drop(input, 10), "\u{2A7D}\u{338}"))
    "nles;" <> _ -> Ok(#(list.drop(input, 5), "\u{2A7D}\u{338}"))
    "nless;" <> _ -> Ok(#(list.drop(input, 6), "\u{226E}"))
    "nlsim;" <> _ -> Ok(#(list.drop(input, 6), "\u{2274}"))
    "nlt;" <> _ -> Ok(#(list.drop(input, 4), "\u{226E}"))
    "nltri;" <> _ -> Ok(#(list.drop(input, 6), "\u{22EA}"))
    "nltrie;" <> _ -> Ok(#(list.drop(input, 7), "\u{22EC}"))
    "nmid;" <> _ -> Ok(#(list.drop(input, 5), "\u{2224}"))
    "nopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D55F}"))
    "not;" <> _ -> Ok(#(list.drop(input, 4), "\u{AC}"))
    "notin;" <> _ -> Ok(#(list.drop(input, 6), "\u{2209}"))
    "notinE;" <> _ -> Ok(#(list.drop(input, 7), "\u{22F9}\u{338}"))
    "notindot;" <> _ -> Ok(#(list.drop(input, 9), "\u{22F5}\u{338}"))
    "notinva;" <> _ -> Ok(#(list.drop(input, 8), "\u{2209}"))
    "notinvb;" <> _ -> Ok(#(list.drop(input, 8), "\u{22F7}"))
    "notinvc;" <> _ -> Ok(#(list.drop(input, 8), "\u{22F6}"))
    "notni;" <> _ -> Ok(#(list.drop(input, 6), "\u{220C}"))
    "notniva;" <> _ -> Ok(#(list.drop(input, 8), "\u{220C}"))
    "notnivb;" <> _ -> Ok(#(list.drop(input, 8), "\u{22FE}"))
    "notnivc;" <> _ -> Ok(#(list.drop(input, 8), "\u{22FD}"))
    "npar;" <> _ -> Ok(#(list.drop(input, 5), "\u{2226}"))
    "nparallel;" <> _ -> Ok(#(list.drop(input, 10), "\u{2226}"))
    "nparsl;" <> _ -> Ok(#(list.drop(input, 7), "\u{2AFD}\u{20E5}"))
    "npart;" <> _ -> Ok(#(list.drop(input, 6), "\u{2202}\u{338}"))
    "npolint;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A14}"))
    "npr;" <> _ -> Ok(#(list.drop(input, 4), "\u{2280}"))
    "nprcue;" <> _ -> Ok(#(list.drop(input, 7), "\u{22E0}"))
    "npre;" <> _ -> Ok(#(list.drop(input, 5), "\u{2AAF}\u{338}"))
    "nprec;" <> _ -> Ok(#(list.drop(input, 6), "\u{2280}"))
    "npreceq;" <> _ -> Ok(#(list.drop(input, 8), "\u{2AAF}\u{338}"))
    "nrArr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21CF}"))
    "nrarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{219B}"))
    "nrarrc;" <> _ -> Ok(#(list.drop(input, 7), "\u{2933}\u{338}"))
    "nrarrw;" <> _ -> Ok(#(list.drop(input, 7), "\u{219D}\u{338}"))
    "nrightarrow;" <> _ -> Ok(#(list.drop(input, 12), "\u{219B}"))
    "nrtri;" <> _ -> Ok(#(list.drop(input, 6), "\u{22EB}"))
    "nrtrie;" <> _ -> Ok(#(list.drop(input, 7), "\u{22ED}"))
    "nsc;" <> _ -> Ok(#(list.drop(input, 4), "\u{2281}"))
    "nsccue;" <> _ -> Ok(#(list.drop(input, 7), "\u{22E1}"))
    "nsce;" <> _ -> Ok(#(list.drop(input, 5), "\u{2AB0}\u{338}"))
    "nscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4C3}"))
    "nshortmid;" <> _ -> Ok(#(list.drop(input, 10), "\u{2224}"))
    "nshortparallel;" <> _ -> Ok(#(list.drop(input, 15), "\u{2226}"))
    "nsim;" <> _ -> Ok(#(list.drop(input, 5), "\u{2241}"))
    "nsime;" <> _ -> Ok(#(list.drop(input, 6), "\u{2244}"))
    "nsimeq;" <> _ -> Ok(#(list.drop(input, 7), "\u{2244}"))
    "nsmid;" <> _ -> Ok(#(list.drop(input, 6), "\u{2224}"))
    "nspar;" <> _ -> Ok(#(list.drop(input, 6), "\u{2226}"))
    "nsqsube;" <> _ -> Ok(#(list.drop(input, 8), "\u{22E2}"))
    "nsqsupe;" <> _ -> Ok(#(list.drop(input, 8), "\u{22E3}"))
    "nsub;" <> _ -> Ok(#(list.drop(input, 5), "\u{2284}"))
    "nsubE;" <> _ -> Ok(#(list.drop(input, 6), "\u{2AC5}\u{338}"))
    "nsube;" <> _ -> Ok(#(list.drop(input, 6), "\u{2288}"))
    "nsubset;" <> _ -> Ok(#(list.drop(input, 8), "\u{2282}\u{20D2}"))
    "nsubseteq;" <> _ -> Ok(#(list.drop(input, 10), "\u{2288}"))
    "nsubseteqq;" <> _ -> Ok(#(list.drop(input, 11), "\u{2AC5}\u{338}"))
    "nsucc;" <> _ -> Ok(#(list.drop(input, 6), "\u{2281}"))
    "nsucceq;" <> _ -> Ok(#(list.drop(input, 8), "\u{2AB0}\u{338}"))
    "nsup;" <> _ -> Ok(#(list.drop(input, 5), "\u{2285}"))
    "nsupE;" <> _ -> Ok(#(list.drop(input, 6), "\u{2AC6}\u{338}"))
    "nsupe;" <> _ -> Ok(#(list.drop(input, 6), "\u{2289}"))
    "nsupset;" <> _ -> Ok(#(list.drop(input, 8), "\u{2283}\u{20D2}"))
    "nsupseteq;" <> _ -> Ok(#(list.drop(input, 10), "\u{2289}"))
    "nsupseteqq;" <> _ -> Ok(#(list.drop(input, 11), "\u{2AC6}\u{338}"))
    "ntgl;" <> _ -> Ok(#(list.drop(input, 5), "\u{2279}"))
    "ntilde;" <> _ -> Ok(#(list.drop(input, 7), "\u{F1}"))
    "ntlg;" <> _ -> Ok(#(list.drop(input, 5), "\u{2278}"))
    "ntriangleleft;" <> _ -> Ok(#(list.drop(input, 14), "\u{22EA}"))
    "ntrianglelefteq;" <> _ -> Ok(#(list.drop(input, 16), "\u{22EC}"))
    "ntriangleright;" <> _ -> Ok(#(list.drop(input, 15), "\u{22EB}"))
    "ntrianglerighteq;" <> _ -> Ok(#(list.drop(input, 17), "\u{22ED}"))
    "nu;" <> _ -> Ok(#(list.drop(input, 3), "\u{3BD}"))
    "num;" <> _ -> Ok(#(list.drop(input, 4), "\u{23}"))
    "numero;" <> _ -> Ok(#(list.drop(input, 7), "\u{2116}"))
    "numsp;" <> _ -> Ok(#(list.drop(input, 6), "\u{2007}"))
    "nvDash;" <> _ -> Ok(#(list.drop(input, 7), "\u{22AD}"))
    "nvHarr;" <> _ -> Ok(#(list.drop(input, 7), "\u{2904}"))
    "nvap;" <> _ -> Ok(#(list.drop(input, 5), "\u{224D}\u{20D2}"))
    "nvdash;" <> _ -> Ok(#(list.drop(input, 7), "\u{22AC}"))
    "nvge;" <> _ -> Ok(#(list.drop(input, 5), "\u{2265}\u{20D2}"))
    "nvgt;" <> _ -> Ok(#(list.drop(input, 5), "\u{3E}\u{20D2}"))
    "nvinfin;" <> _ -> Ok(#(list.drop(input, 8), "\u{29DE}"))
    "nvlArr;" <> _ -> Ok(#(list.drop(input, 7), "\u{2902}"))
    "nvle;" <> _ -> Ok(#(list.drop(input, 5), "\u{2264}\u{20D2}"))
    "nvlt;" <> _ -> Ok(#(list.drop(input, 5), "\u{3C}\u{20D2}"))
    "nvltrie;" <> _ -> Ok(#(list.drop(input, 8), "\u{22B4}\u{20D2}"))
    "nvrArr;" <> _ -> Ok(#(list.drop(input, 7), "\u{2903}"))
    "nvrtrie;" <> _ -> Ok(#(list.drop(input, 8), "\u{22B5}\u{20D2}"))
    "nvsim;" <> _ -> Ok(#(list.drop(input, 6), "\u{223C}\u{20D2}"))
    "nwArr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21D6}"))
    "nwarhk;" <> _ -> Ok(#(list.drop(input, 7), "\u{2923}"))
    "nwarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{2196}"))
    "nwarrow;" <> _ -> Ok(#(list.drop(input, 8), "\u{2196}"))
    "nwnear;" <> _ -> Ok(#(list.drop(input, 7), "\u{2927}"))
    _ -> Error(Nil)
  }
}

fn match_o(entity: String, input: List(String)) {
  case entity {
    "oS;" <> _ -> Ok(#(list.drop(input, 3), "\u{24C8}"))
    "oacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{F3}"))
    "oast;" <> _ -> Ok(#(list.drop(input, 5), "\u{229B}"))
    "ocir;" <> _ -> Ok(#(list.drop(input, 5), "\u{229A}"))
    "ocirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{F4}"))
    "ocy;" <> _ -> Ok(#(list.drop(input, 4), "\u{43E}"))
    "odash;" <> _ -> Ok(#(list.drop(input, 6), "\u{229D}"))
    "odblac;" <> _ -> Ok(#(list.drop(input, 7), "\u{151}"))
    "odiv;" <> _ -> Ok(#(list.drop(input, 5), "\u{2A38}"))
    "odot;" <> _ -> Ok(#(list.drop(input, 5), "\u{2299}"))
    "odsold;" <> _ -> Ok(#(list.drop(input, 7), "\u{29BC}"))
    "oelig;" <> _ -> Ok(#(list.drop(input, 6), "\u{153}"))
    "ofcir;" <> _ -> Ok(#(list.drop(input, 6), "\u{29BF}"))
    "ofr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D52C}"))
    "ogon;" <> _ -> Ok(#(list.drop(input, 5), "\u{2DB}"))
    "ograve;" <> _ -> Ok(#(list.drop(input, 7), "\u{F2}"))
    "ogt;" <> _ -> Ok(#(list.drop(input, 4), "\u{29C1}"))
    "ohbar;" <> _ -> Ok(#(list.drop(input, 6), "\u{29B5}"))
    "ohm;" <> _ -> Ok(#(list.drop(input, 4), "\u{3A9}"))
    "oint;" <> _ -> Ok(#(list.drop(input, 5), "\u{222E}"))
    "olarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21BA}"))
    "olcir;" <> _ -> Ok(#(list.drop(input, 6), "\u{29BE}"))
    "olcross;" <> _ -> Ok(#(list.drop(input, 8), "\u{29BB}"))
    "oline;" <> _ -> Ok(#(list.drop(input, 6), "\u{203E}"))
    "olt;" <> _ -> Ok(#(list.drop(input, 4), "\u{29C0}"))
    "omacr;" <> _ -> Ok(#(list.drop(input, 6), "\u{14D}"))
    "omega;" <> _ -> Ok(#(list.drop(input, 6), "\u{3C9}"))
    "omicron;" <> _ -> Ok(#(list.drop(input, 8), "\u{3BF}"))
    "omid;" <> _ -> Ok(#(list.drop(input, 5), "\u{29B6}"))
    "ominus;" <> _ -> Ok(#(list.drop(input, 7), "\u{2296}"))
    "oopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D560}"))
    "opar;" <> _ -> Ok(#(list.drop(input, 5), "\u{29B7}"))
    "operp;" <> _ -> Ok(#(list.drop(input, 6), "\u{29B9}"))
    "oplus;" <> _ -> Ok(#(list.drop(input, 6), "\u{2295}"))
    "or;" <> _ -> Ok(#(list.drop(input, 3), "\u{2228}"))
    "orarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21BB}"))
    "ord;" <> _ -> Ok(#(list.drop(input, 4), "\u{2A5D}"))
    "order;" <> _ -> Ok(#(list.drop(input, 6), "\u{2134}"))
    "orderof;" <> _ -> Ok(#(list.drop(input, 8), "\u{2134}"))
    "ordf;" <> _ -> Ok(#(list.drop(input, 5), "\u{AA}"))
    "ordm;" <> _ -> Ok(#(list.drop(input, 5), "\u{BA}"))
    "origof;" <> _ -> Ok(#(list.drop(input, 7), "\u{22B6}"))
    "oror;" <> _ -> Ok(#(list.drop(input, 5), "\u{2A56}"))
    "orslope;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A57}"))
    "orv;" <> _ -> Ok(#(list.drop(input, 4), "\u{2A5B}"))
    "oscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{2134}"))
    "oslash;" <> _ -> Ok(#(list.drop(input, 7), "\u{F8}"))
    "osol;" <> _ -> Ok(#(list.drop(input, 5), "\u{2298}"))
    "otilde;" <> _ -> Ok(#(list.drop(input, 7), "\u{F5}"))
    "otimes;" <> _ -> Ok(#(list.drop(input, 7), "\u{2297}"))
    "otimesas;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A36}"))
    "ouml;" <> _ -> Ok(#(list.drop(input, 5), "\u{F6}"))
    "ovbar;" <> _ -> Ok(#(list.drop(input, 6), "\u{233D}"))
    _ -> Error(Nil)
  }
}

fn match_p(entity: String, input: List(String)) {
  case entity {
    "par;" <> _ -> Ok(#(list.drop(input, 4), "\u{2225}"))
    "para;" <> _ -> Ok(#(list.drop(input, 5), "\u{B6}"))
    "parallel;" <> _ -> Ok(#(list.drop(input, 9), "\u{2225}"))
    "parsim;" <> _ -> Ok(#(list.drop(input, 7), "\u{2AF3}"))
    "parsl;" <> _ -> Ok(#(list.drop(input, 6), "\u{2AFD}"))
    "part;" <> _ -> Ok(#(list.drop(input, 5), "\u{2202}"))
    "pcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{43F}"))
    "percnt;" <> _ -> Ok(#(list.drop(input, 7), "\u{25}"))
    "period;" <> _ -> Ok(#(list.drop(input, 7), "\u{2E}"))
    "permil;" <> _ -> Ok(#(list.drop(input, 7), "\u{2030}"))
    "perp;" <> _ -> Ok(#(list.drop(input, 5), "\u{22A5}"))
    "pertenk;" <> _ -> Ok(#(list.drop(input, 8), "\u{2031}"))
    "pfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D52D}"))
    "phi;" <> _ -> Ok(#(list.drop(input, 4), "\u{3C6}"))
    "phiv;" <> _ -> Ok(#(list.drop(input, 5), "\u{3D5}"))
    "phmmat;" <> _ -> Ok(#(list.drop(input, 7), "\u{2133}"))
    "phone;" <> _ -> Ok(#(list.drop(input, 6), "\u{260E}"))
    "pi;" <> _ -> Ok(#(list.drop(input, 3), "\u{3C0}"))
    "pitchfork;" <> _ -> Ok(#(list.drop(input, 10), "\u{22D4}"))
    "piv;" <> _ -> Ok(#(list.drop(input, 4), "\u{3D6}"))
    "planck;" <> _ -> Ok(#(list.drop(input, 7), "\u{210F}"))
    "planckh;" <> _ -> Ok(#(list.drop(input, 8), "\u{210E}"))
    "plankv;" <> _ -> Ok(#(list.drop(input, 7), "\u{210F}"))
    "plus;" <> _ -> Ok(#(list.drop(input, 5), "\u{2B}"))
    "plusacir;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A23}"))
    "plusb;" <> _ -> Ok(#(list.drop(input, 6), "\u{229E}"))
    "pluscir;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A22}"))
    "plusdo;" <> _ -> Ok(#(list.drop(input, 7), "\u{2214}"))
    "plusdu;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A25}"))
    "pluse;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A72}"))
    "plusmn;" <> _ -> Ok(#(list.drop(input, 7), "\u{B1}"))
    "plussim;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A26}"))
    "plustwo;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A27}"))
    "pm;" <> _ -> Ok(#(list.drop(input, 3), "\u{B1}"))
    "pointint;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A15}"))
    "popf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D561}"))
    "pound;" <> _ -> Ok(#(list.drop(input, 6), "\u{A3}"))
    "pr;" <> _ -> Ok(#(list.drop(input, 3), "\u{227A}"))
    "prE;" <> _ -> Ok(#(list.drop(input, 4), "\u{2AB3}"))
    "prap;" <> _ -> Ok(#(list.drop(input, 5), "\u{2AB7}"))
    "prcue;" <> _ -> Ok(#(list.drop(input, 6), "\u{227C}"))
    "pre;" <> _ -> Ok(#(list.drop(input, 4), "\u{2AAF}"))
    "prec;" <> _ -> Ok(#(list.drop(input, 5), "\u{227A}"))
    "precapprox;" <> _ -> Ok(#(list.drop(input, 11), "\u{2AB7}"))
    "preccurlyeq;" <> _ -> Ok(#(list.drop(input, 12), "\u{227C}"))
    "preceq;" <> _ -> Ok(#(list.drop(input, 7), "\u{2AAF}"))
    "precnapprox;" <> _ -> Ok(#(list.drop(input, 12), "\u{2AB9}"))
    "precneqq;" <> _ -> Ok(#(list.drop(input, 9), "\u{2AB5}"))
    "precnsim;" <> _ -> Ok(#(list.drop(input, 9), "\u{22E8}"))
    "precsim;" <> _ -> Ok(#(list.drop(input, 8), "\u{227E}"))
    "prime;" <> _ -> Ok(#(list.drop(input, 6), "\u{2032}"))
    "primes;" <> _ -> Ok(#(list.drop(input, 7), "\u{2119}"))
    "prnE;" <> _ -> Ok(#(list.drop(input, 5), "\u{2AB5}"))
    "prnap;" <> _ -> Ok(#(list.drop(input, 6), "\u{2AB9}"))
    "prnsim;" <> _ -> Ok(#(list.drop(input, 7), "\u{22E8}"))
    "prod;" <> _ -> Ok(#(list.drop(input, 5), "\u{220F}"))
    "profalar;" <> _ -> Ok(#(list.drop(input, 9), "\u{232E}"))
    "profline;" <> _ -> Ok(#(list.drop(input, 9), "\u{2312}"))
    "profsurf;" <> _ -> Ok(#(list.drop(input, 9), "\u{2313}"))
    "prop;" <> _ -> Ok(#(list.drop(input, 5), "\u{221D}"))
    "propto;" <> _ -> Ok(#(list.drop(input, 7), "\u{221D}"))
    "prsim;" <> _ -> Ok(#(list.drop(input, 6), "\u{227E}"))
    "prurel;" <> _ -> Ok(#(list.drop(input, 7), "\u{22B0}"))
    "pscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4C5}"))
    "psi;" <> _ -> Ok(#(list.drop(input, 4), "\u{3C8}"))
    "puncsp;" <> _ -> Ok(#(list.drop(input, 7), "\u{2008}"))
    _ -> Error(Nil)
  }
}

fn match_q(entity: String, input: List(String)) {
  case entity {
    "qfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D52E}"))
    "qint;" <> _ -> Ok(#(list.drop(input, 5), "\u{2A0C}"))
    "qopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D562}"))
    "qprime;" <> _ -> Ok(#(list.drop(input, 7), "\u{2057}"))
    "qscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4C6}"))
    "quaternions;" <> _ -> Ok(#(list.drop(input, 12), "\u{210D}"))
    "quatint;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A16}"))
    "quest;" <> _ -> Ok(#(list.drop(input, 6), "\u{3F}"))
    "questeq;" <> _ -> Ok(#(list.drop(input, 8), "\u{225F}"))
    "quot;" <> _ -> Ok(#(list.drop(input, 5), "\u{22}"))
    _ -> Error(Nil)
  }
}

fn match_r(entity: String, input: List(String)) {
  case entity {
    "rAarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21DB}"))
    "rArr;" <> _ -> Ok(#(list.drop(input, 5), "\u{21D2}"))
    "rAtail;" <> _ -> Ok(#(list.drop(input, 7), "\u{291C}"))
    "rBarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{290F}"))
    "rHar;" <> _ -> Ok(#(list.drop(input, 5), "\u{2964}"))
    "race;" <> _ -> Ok(#(list.drop(input, 5), "\u{223D}\u{331}"))
    "racute;" <> _ -> Ok(#(list.drop(input, 7), "\u{155}"))
    "radic;" <> _ -> Ok(#(list.drop(input, 6), "\u{221A}"))
    "raemptyv;" <> _ -> Ok(#(list.drop(input, 9), "\u{29B3}"))
    "rang;" <> _ -> Ok(#(list.drop(input, 5), "\u{27E9}"))
    "rangd;" <> _ -> Ok(#(list.drop(input, 6), "\u{2992}"))
    "range;" <> _ -> Ok(#(list.drop(input, 6), "\u{29A5}"))
    "rangle;" <> _ -> Ok(#(list.drop(input, 7), "\u{27E9}"))
    "raquo;" <> _ -> Ok(#(list.drop(input, 6), "\u{BB}"))
    "rarr;" <> _ -> Ok(#(list.drop(input, 5), "\u{2192}"))
    "rarrap;" <> _ -> Ok(#(list.drop(input, 7), "\u{2975}"))
    "rarrb;" <> _ -> Ok(#(list.drop(input, 6), "\u{21E5}"))
    "rarrbfs;" <> _ -> Ok(#(list.drop(input, 8), "\u{2920}"))
    "rarrc;" <> _ -> Ok(#(list.drop(input, 6), "\u{2933}"))
    "rarrfs;" <> _ -> Ok(#(list.drop(input, 7), "\u{291E}"))
    "rarrhk;" <> _ -> Ok(#(list.drop(input, 7), "\u{21AA}"))
    "rarrlp;" <> _ -> Ok(#(list.drop(input, 7), "\u{21AC}"))
    "rarrpl;" <> _ -> Ok(#(list.drop(input, 7), "\u{2945}"))
    "rarrsim;" <> _ -> Ok(#(list.drop(input, 8), "\u{2974}"))
    "rarrtl;" <> _ -> Ok(#(list.drop(input, 7), "\u{21A3}"))
    "rarrw;" <> _ -> Ok(#(list.drop(input, 6), "\u{219D}"))
    "ratail;" <> _ -> Ok(#(list.drop(input, 7), "\u{291A}"))
    "ratio;" <> _ -> Ok(#(list.drop(input, 6), "\u{2236}"))
    "rationals;" <> _ -> Ok(#(list.drop(input, 10), "\u{211A}"))
    "rbarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{290D}"))
    "rbbrk;" <> _ -> Ok(#(list.drop(input, 6), "\u{2773}"))
    "rbrace;" <> _ -> Ok(#(list.drop(input, 7), "\u{7D}"))
    "rbrack;" <> _ -> Ok(#(list.drop(input, 7), "\u{5D}"))
    "rbrke;" <> _ -> Ok(#(list.drop(input, 6), "\u{298C}"))
    "rbrksld;" <> _ -> Ok(#(list.drop(input, 8), "\u{298E}"))
    "rbrkslu;" <> _ -> Ok(#(list.drop(input, 8), "\u{2990}"))
    "rcaron;" <> _ -> Ok(#(list.drop(input, 7), "\u{159}"))
    "rcedil;" <> _ -> Ok(#(list.drop(input, 7), "\u{157}"))
    "rceil;" <> _ -> Ok(#(list.drop(input, 6), "\u{2309}"))
    "rcub;" <> _ -> Ok(#(list.drop(input, 5), "\u{7D}"))
    "rcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{440}"))
    "rdca;" <> _ -> Ok(#(list.drop(input, 5), "\u{2937}"))
    "rdldhar;" <> _ -> Ok(#(list.drop(input, 8), "\u{2969}"))
    "rdquo;" <> _ -> Ok(#(list.drop(input, 6), "\u{201D}"))
    "rdquor;" <> _ -> Ok(#(list.drop(input, 7), "\u{201D}"))
    "rdsh;" <> _ -> Ok(#(list.drop(input, 5), "\u{21B3}"))
    "real;" <> _ -> Ok(#(list.drop(input, 5), "\u{211C}"))
    "realine;" <> _ -> Ok(#(list.drop(input, 8), "\u{211B}"))
    "realpart;" <> _ -> Ok(#(list.drop(input, 9), "\u{211C}"))
    "reals;" <> _ -> Ok(#(list.drop(input, 6), "\u{211D}"))
    "rect;" <> _ -> Ok(#(list.drop(input, 5), "\u{25AD}"))
    "reg;" <> _ -> Ok(#(list.drop(input, 4), "\u{AE}"))
    "rfisht;" <> _ -> Ok(#(list.drop(input, 7), "\u{297D}"))
    "rfloor;" <> _ -> Ok(#(list.drop(input, 7), "\u{230B}"))
    "rfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D52F}"))
    "rhard;" <> _ -> Ok(#(list.drop(input, 6), "\u{21C1}"))
    "rharu;" <> _ -> Ok(#(list.drop(input, 6), "\u{21C0}"))
    "rharul;" <> _ -> Ok(#(list.drop(input, 7), "\u{296C}"))
    "rho;" <> _ -> Ok(#(list.drop(input, 4), "\u{3C1}"))
    "rhov;" <> _ -> Ok(#(list.drop(input, 5), "\u{3F1}"))
    "rightarrow;" <> _ -> Ok(#(list.drop(input, 11), "\u{2192}"))
    "rightarrowtail;" <> _ -> Ok(#(list.drop(input, 15), "\u{21A3}"))
    "rightharpoondown;" <> _ -> Ok(#(list.drop(input, 17), "\u{21C1}"))
    "rightharpoonup;" <> _ -> Ok(#(list.drop(input, 15), "\u{21C0}"))
    "rightleftarrows;" <> _ -> Ok(#(list.drop(input, 16), "\u{21C4}"))
    "rightleftharpoons;" <> _ -> Ok(#(list.drop(input, 18), "\u{21CC}"))
    "rightrightarrows;" <> _ -> Ok(#(list.drop(input, 17), "\u{21C9}"))
    "rightsquigarrow;" <> _ -> Ok(#(list.drop(input, 16), "\u{219D}"))
    "rightthreetimes;" <> _ -> Ok(#(list.drop(input, 16), "\u{22CC}"))
    "ring;" <> _ -> Ok(#(list.drop(input, 5), "\u{2DA}"))
    "risingdotseq;" <> _ -> Ok(#(list.drop(input, 13), "\u{2253}"))
    "rlarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21C4}"))
    "rlhar;" <> _ -> Ok(#(list.drop(input, 6), "\u{21CC}"))
    "rlm;" <> _ -> Ok(#(list.drop(input, 4), "\u{200F}"))
    "rmoust;" <> _ -> Ok(#(list.drop(input, 7), "\u{23B1}"))
    "rmoustache;" <> _ -> Ok(#(list.drop(input, 11), "\u{23B1}"))
    "rnmid;" <> _ -> Ok(#(list.drop(input, 6), "\u{2AEE}"))
    "roang;" <> _ -> Ok(#(list.drop(input, 6), "\u{27ED}"))
    "roarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21FE}"))
    "robrk;" <> _ -> Ok(#(list.drop(input, 6), "\u{27E7}"))
    "ropar;" <> _ -> Ok(#(list.drop(input, 6), "\u{2986}"))
    "ropf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D563}"))
    "roplus;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A2E}"))
    "rotimes;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A35}"))
    "rpar;" <> _ -> Ok(#(list.drop(input, 5), "\u{29}"))
    "rpargt;" <> _ -> Ok(#(list.drop(input, 7), "\u{2994}"))
    "rppolint;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A12}"))
    "rrarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21C9}"))
    "rsaquo;" <> _ -> Ok(#(list.drop(input, 7), "\u{203A}"))
    "rscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4C7}"))
    "rsh;" <> _ -> Ok(#(list.drop(input, 4), "\u{21B1}"))
    "rsqb;" <> _ -> Ok(#(list.drop(input, 5), "\u{5D}"))
    "rsquo;" <> _ -> Ok(#(list.drop(input, 6), "\u{2019}"))
    "rsquor;" <> _ -> Ok(#(list.drop(input, 7), "\u{2019}"))
    "rthree;" <> _ -> Ok(#(list.drop(input, 7), "\u{22CC}"))
    "rtimes;" <> _ -> Ok(#(list.drop(input, 7), "\u{22CA}"))
    "rtri;" <> _ -> Ok(#(list.drop(input, 5), "\u{25B9}"))
    "rtrie;" <> _ -> Ok(#(list.drop(input, 6), "\u{22B5}"))
    "rtrif;" <> _ -> Ok(#(list.drop(input, 6), "\u{25B8}"))
    "rtriltri;" <> _ -> Ok(#(list.drop(input, 9), "\u{29CE}"))
    "ruluhar;" <> _ -> Ok(#(list.drop(input, 8), "\u{2968}"))
    "rx;" <> _ -> Ok(#(list.drop(input, 3), "\u{211E}"))
    _ -> Error(Nil)
  }
}

fn match_s(entity: String, input: List(String)) {
  case entity {
    "sacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{15B}"))
    "sbquo;" <> _ -> Ok(#(list.drop(input, 6), "\u{201A}"))
    "sc;" <> _ -> Ok(#(list.drop(input, 3), "\u{227B}"))
    "scE;" <> _ -> Ok(#(list.drop(input, 4), "\u{2AB4}"))
    "scap;" <> _ -> Ok(#(list.drop(input, 5), "\u{2AB8}"))
    "scaron;" <> _ -> Ok(#(list.drop(input, 7), "\u{161}"))
    "sccue;" <> _ -> Ok(#(list.drop(input, 6), "\u{227D}"))
    "sce;" <> _ -> Ok(#(list.drop(input, 4), "\u{2AB0}"))
    "scedil;" <> _ -> Ok(#(list.drop(input, 7), "\u{15F}"))
    "scirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{15D}"))
    "scnE;" <> _ -> Ok(#(list.drop(input, 5), "\u{2AB6}"))
    "scnap;" <> _ -> Ok(#(list.drop(input, 6), "\u{2ABA}"))
    "scnsim;" <> _ -> Ok(#(list.drop(input, 7), "\u{22E9}"))
    "scpolint;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A13}"))
    "scsim;" <> _ -> Ok(#(list.drop(input, 6), "\u{227F}"))
    "scy;" <> _ -> Ok(#(list.drop(input, 4), "\u{441}"))
    "sdot;" <> _ -> Ok(#(list.drop(input, 5), "\u{22C5}"))
    "sdotb;" <> _ -> Ok(#(list.drop(input, 6), "\u{22A1}"))
    "sdote;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A66}"))
    "seArr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21D8}"))
    "searhk;" <> _ -> Ok(#(list.drop(input, 7), "\u{2925}"))
    "searr;" <> _ -> Ok(#(list.drop(input, 6), "\u{2198}"))
    "searrow;" <> _ -> Ok(#(list.drop(input, 8), "\u{2198}"))
    "sect;" <> _ -> Ok(#(list.drop(input, 5), "\u{A7}"))
    "semi;" <> _ -> Ok(#(list.drop(input, 5), "\u{3B}"))
    "seswar;" <> _ -> Ok(#(list.drop(input, 7), "\u{2929}"))
    "setminus;" <> _ -> Ok(#(list.drop(input, 9), "\u{2216}"))
    "setmn;" <> _ -> Ok(#(list.drop(input, 6), "\u{2216}"))
    "sext;" <> _ -> Ok(#(list.drop(input, 5), "\u{2736}"))
    "sfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D530}"))
    "sfrown;" <> _ -> Ok(#(list.drop(input, 7), "\u{2322}"))
    "sharp;" <> _ -> Ok(#(list.drop(input, 6), "\u{266F}"))
    "shchcy;" <> _ -> Ok(#(list.drop(input, 7), "\u{449}"))
    "shcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{448}"))
    "shortmid;" <> _ -> Ok(#(list.drop(input, 9), "\u{2223}"))
    "shortparallel;" <> _ -> Ok(#(list.drop(input, 14), "\u{2225}"))
    "shy;" <> _ -> Ok(#(list.drop(input, 4), "\u{AD}"))
    "sigma;" <> _ -> Ok(#(list.drop(input, 6), "\u{3C3}"))
    "sigmaf;" <> _ -> Ok(#(list.drop(input, 7), "\u{3C2}"))
    "sigmav;" <> _ -> Ok(#(list.drop(input, 7), "\u{3C2}"))
    "sim;" <> _ -> Ok(#(list.drop(input, 4), "\u{223C}"))
    "simdot;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A6A}"))
    "sime;" <> _ -> Ok(#(list.drop(input, 5), "\u{2243}"))
    "simeq;" <> _ -> Ok(#(list.drop(input, 6), "\u{2243}"))
    "simg;" <> _ -> Ok(#(list.drop(input, 5), "\u{2A9E}"))
    "simgE;" <> _ -> Ok(#(list.drop(input, 6), "\u{2AA0}"))
    "siml;" <> _ -> Ok(#(list.drop(input, 5), "\u{2A9D}"))
    "simlE;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A9F}"))
    "simne;" <> _ -> Ok(#(list.drop(input, 6), "\u{2246}"))
    "simplus;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A24}"))
    "simrarr;" <> _ -> Ok(#(list.drop(input, 8), "\u{2972}"))
    "slarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{2190}"))
    "smallsetminus;" <> _ -> Ok(#(list.drop(input, 14), "\u{2216}"))
    "smashp;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A33}"))
    "smeparsl;" <> _ -> Ok(#(list.drop(input, 9), "\u{29E4}"))
    "smid;" <> _ -> Ok(#(list.drop(input, 5), "\u{2223}"))
    "smile;" <> _ -> Ok(#(list.drop(input, 6), "\u{2323}"))
    "smt;" <> _ -> Ok(#(list.drop(input, 4), "\u{2AAA}"))
    "smte;" <> _ -> Ok(#(list.drop(input, 5), "\u{2AAC}"))
    "smtes;" <> _ -> Ok(#(list.drop(input, 6), "\u{2AAC}\u{FE00}"))
    "softcy;" <> _ -> Ok(#(list.drop(input, 7), "\u{44C}"))
    "sol;" <> _ -> Ok(#(list.drop(input, 4), "\u{2F}"))
    "solb;" <> _ -> Ok(#(list.drop(input, 5), "\u{29C4}"))
    "solbar;" <> _ -> Ok(#(list.drop(input, 7), "\u{233F}"))
    "sopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D564}"))
    "spades;" <> _ -> Ok(#(list.drop(input, 7), "\u{2660}"))
    "spadesuit;" <> _ -> Ok(#(list.drop(input, 10), "\u{2660}"))
    "spar;" <> _ -> Ok(#(list.drop(input, 5), "\u{2225}"))
    "sqcap;" <> _ -> Ok(#(list.drop(input, 6), "\u{2293}"))
    "sqcaps;" <> _ -> Ok(#(list.drop(input, 7), "\u{2293}\u{FE00}"))
    "sqcup;" <> _ -> Ok(#(list.drop(input, 6), "\u{2294}"))
    "sqcups;" <> _ -> Ok(#(list.drop(input, 7), "\u{2294}\u{FE00}"))
    "sqsub;" <> _ -> Ok(#(list.drop(input, 6), "\u{228F}"))
    "sqsube;" <> _ -> Ok(#(list.drop(input, 7), "\u{2291}"))
    "sqsubset;" <> _ -> Ok(#(list.drop(input, 9), "\u{228F}"))
    "sqsubseteq;" <> _ -> Ok(#(list.drop(input, 11), "\u{2291}"))
    "sqsup;" <> _ -> Ok(#(list.drop(input, 6), "\u{2290}"))
    "sqsupe;" <> _ -> Ok(#(list.drop(input, 7), "\u{2292}"))
    "sqsupset;" <> _ -> Ok(#(list.drop(input, 9), "\u{2290}"))
    "sqsupseteq;" <> _ -> Ok(#(list.drop(input, 11), "\u{2292}"))
    "squ;" <> _ -> Ok(#(list.drop(input, 4), "\u{25A1}"))
    "square;" <> _ -> Ok(#(list.drop(input, 7), "\u{25A1}"))
    "squarf;" <> _ -> Ok(#(list.drop(input, 7), "\u{25AA}"))
    "squf;" <> _ -> Ok(#(list.drop(input, 5), "\u{25AA}"))
    "srarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{2192}"))
    "sscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4C8}"))
    "ssetmn;" <> _ -> Ok(#(list.drop(input, 7), "\u{2216}"))
    "ssmile;" <> _ -> Ok(#(list.drop(input, 7), "\u{2323}"))
    "sstarf;" <> _ -> Ok(#(list.drop(input, 7), "\u{22C6}"))
    "star;" <> _ -> Ok(#(list.drop(input, 5), "\u{2606}"))
    "starf;" <> _ -> Ok(#(list.drop(input, 6), "\u{2605}"))
    "straightepsilon;" <> _ -> Ok(#(list.drop(input, 16), "\u{3F5}"))
    "straightphi;" <> _ -> Ok(#(list.drop(input, 12), "\u{3D5}"))
    "strns;" <> _ -> Ok(#(list.drop(input, 6), "\u{AF}"))
    "sub;" <> _ -> Ok(#(list.drop(input, 4), "\u{2282}"))
    "subE;" <> _ -> Ok(#(list.drop(input, 5), "\u{2AC5}"))
    "subdot;" <> _ -> Ok(#(list.drop(input, 7), "\u{2ABD}"))
    "sube;" <> _ -> Ok(#(list.drop(input, 5), "\u{2286}"))
    "subedot;" <> _ -> Ok(#(list.drop(input, 8), "\u{2AC3}"))
    "submult;" <> _ -> Ok(#(list.drop(input, 8), "\u{2AC1}"))
    "subnE;" <> _ -> Ok(#(list.drop(input, 6), "\u{2ACB}"))
    "subne;" <> _ -> Ok(#(list.drop(input, 6), "\u{228A}"))
    "subplus;" <> _ -> Ok(#(list.drop(input, 8), "\u{2ABF}"))
    "subrarr;" <> _ -> Ok(#(list.drop(input, 8), "\u{2979}"))
    "subset;" <> _ -> Ok(#(list.drop(input, 7), "\u{2282}"))
    "subseteq;" <> _ -> Ok(#(list.drop(input, 9), "\u{2286}"))
    "subseteqq;" <> _ -> Ok(#(list.drop(input, 10), "\u{2AC5}"))
    "subsetneq;" <> _ -> Ok(#(list.drop(input, 10), "\u{228A}"))
    "subsetneqq;" <> _ -> Ok(#(list.drop(input, 11), "\u{2ACB}"))
    "subsim;" <> _ -> Ok(#(list.drop(input, 7), "\u{2AC7}"))
    "subsub;" <> _ -> Ok(#(list.drop(input, 7), "\u{2AD5}"))
    "subsup;" <> _ -> Ok(#(list.drop(input, 7), "\u{2AD3}"))
    "succ;" <> _ -> Ok(#(list.drop(input, 5), "\u{227B}"))
    "succapprox;" <> _ -> Ok(#(list.drop(input, 11), "\u{2AB8}"))
    "succcurlyeq;" <> _ -> Ok(#(list.drop(input, 12), "\u{227D}"))
    "succeq;" <> _ -> Ok(#(list.drop(input, 7), "\u{2AB0}"))
    "succnapprox;" <> _ -> Ok(#(list.drop(input, 12), "\u{2ABA}"))
    "succneqq;" <> _ -> Ok(#(list.drop(input, 9), "\u{2AB6}"))
    "succnsim;" <> _ -> Ok(#(list.drop(input, 9), "\u{22E9}"))
    "succsim;" <> _ -> Ok(#(list.drop(input, 8), "\u{227F}"))
    "sum;" <> _ -> Ok(#(list.drop(input, 4), "\u{2211}"))
    "sung;" <> _ -> Ok(#(list.drop(input, 5), "\u{266A}"))
    "sup1;" <> _ -> Ok(#(list.drop(input, 5), "\u{B9}"))
    "sup2;" <> _ -> Ok(#(list.drop(input, 5), "\u{B2}"))
    "sup3;" <> _ -> Ok(#(list.drop(input, 5), "\u{B3}"))
    "sup;" <> _ -> Ok(#(list.drop(input, 4), "\u{2283}"))
    "supE;" <> _ -> Ok(#(list.drop(input, 5), "\u{2AC6}"))
    "supdot;" <> _ -> Ok(#(list.drop(input, 7), "\u{2ABE}"))
    "supdsub;" <> _ -> Ok(#(list.drop(input, 8), "\u{2AD8}"))
    "supe;" <> _ -> Ok(#(list.drop(input, 5), "\u{2287}"))
    "supedot;" <> _ -> Ok(#(list.drop(input, 8), "\u{2AC4}"))
    "suphsol;" <> _ -> Ok(#(list.drop(input, 8), "\u{27C9}"))
    "suphsub;" <> _ -> Ok(#(list.drop(input, 8), "\u{2AD7}"))
    "suplarr;" <> _ -> Ok(#(list.drop(input, 8), "\u{297B}"))
    "supmult;" <> _ -> Ok(#(list.drop(input, 8), "\u{2AC2}"))
    "supnE;" <> _ -> Ok(#(list.drop(input, 6), "\u{2ACC}"))
    "supne;" <> _ -> Ok(#(list.drop(input, 6), "\u{228B}"))
    "supplus;" <> _ -> Ok(#(list.drop(input, 8), "\u{2AC0}"))
    "supset;" <> _ -> Ok(#(list.drop(input, 7), "\u{2283}"))
    "supseteq;" <> _ -> Ok(#(list.drop(input, 9), "\u{2287}"))
    "supseteqq;" <> _ -> Ok(#(list.drop(input, 10), "\u{2AC6}"))
    "supsetneq;" <> _ -> Ok(#(list.drop(input, 10), "\u{228B}"))
    "supsetneqq;" <> _ -> Ok(#(list.drop(input, 11), "\u{2ACC}"))
    "supsim;" <> _ -> Ok(#(list.drop(input, 7), "\u{2AC8}"))
    "supsub;" <> _ -> Ok(#(list.drop(input, 7), "\u{2AD4}"))
    "supsup;" <> _ -> Ok(#(list.drop(input, 7), "\u{2AD6}"))
    "swArr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21D9}"))
    "swarhk;" <> _ -> Ok(#(list.drop(input, 7), "\u{2926}"))
    "swarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{2199}"))
    "swarrow;" <> _ -> Ok(#(list.drop(input, 8), "\u{2199}"))
    "swnwar;" <> _ -> Ok(#(list.drop(input, 7), "\u{292A}"))
    "szlig;" <> _ -> Ok(#(list.drop(input, 6), "\u{DF}"))
    _ -> Error(Nil)
  }
}

fn match_t(entity: String, input: List(String)) {
  case entity {
    "target;" <> _ -> Ok(#(list.drop(input, 7), "\u{2316}"))
    "tau;" <> _ -> Ok(#(list.drop(input, 4), "\u{3C4}"))
    "tbrk;" <> _ -> Ok(#(list.drop(input, 5), "\u{23B4}"))
    "tcaron;" <> _ -> Ok(#(list.drop(input, 7), "\u{165}"))
    "tcedil;" <> _ -> Ok(#(list.drop(input, 7), "\u{163}"))
    "tcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{442}"))
    "tdot;" <> _ -> Ok(#(list.drop(input, 5), "\u{20DB}"))
    "telrec;" <> _ -> Ok(#(list.drop(input, 7), "\u{2315}"))
    "tfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D531}"))
    "there4;" <> _ -> Ok(#(list.drop(input, 7), "\u{2234}"))
    "therefore;" <> _ -> Ok(#(list.drop(input, 10), "\u{2234}"))
    "theta;" <> _ -> Ok(#(list.drop(input, 6), "\u{3B8}"))
    "thetasym;" <> _ -> Ok(#(list.drop(input, 9), "\u{3D1}"))
    "thetav;" <> _ -> Ok(#(list.drop(input, 7), "\u{3D1}"))
    "thickapprox;" <> _ -> Ok(#(list.drop(input, 12), "\u{2248}"))
    "thicksim;" <> _ -> Ok(#(list.drop(input, 9), "\u{223C}"))
    "thinsp;" <> _ -> Ok(#(list.drop(input, 7), "\u{2009}"))
    "thkap;" <> _ -> Ok(#(list.drop(input, 6), "\u{2248}"))
    "thksim;" <> _ -> Ok(#(list.drop(input, 7), "\u{223C}"))
    "thorn;" <> _ -> Ok(#(list.drop(input, 6), "\u{FE}"))
    "tilde;" <> _ -> Ok(#(list.drop(input, 6), "\u{2DC}"))
    "times;" <> _ -> Ok(#(list.drop(input, 6), "\u{D7}"))
    "timesb;" <> _ -> Ok(#(list.drop(input, 7), "\u{22A0}"))
    "timesbar;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A31}"))
    "timesd;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A30}"))
    "tint;" <> _ -> Ok(#(list.drop(input, 5), "\u{222D}"))
    "toea;" <> _ -> Ok(#(list.drop(input, 5), "\u{2928}"))
    "top;" <> _ -> Ok(#(list.drop(input, 4), "\u{22A4}"))
    "topbot;" <> _ -> Ok(#(list.drop(input, 7), "\u{2336}"))
    "topcir;" <> _ -> Ok(#(list.drop(input, 7), "\u{2AF1}"))
    "topf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D565}"))
    "topfork;" <> _ -> Ok(#(list.drop(input, 8), "\u{2ADA}"))
    "tosa;" <> _ -> Ok(#(list.drop(input, 5), "\u{2929}"))
    "tprime;" <> _ -> Ok(#(list.drop(input, 7), "\u{2034}"))
    "trade;" <> _ -> Ok(#(list.drop(input, 6), "\u{2122}"))
    "triangle;" <> _ -> Ok(#(list.drop(input, 9), "\u{25B5}"))
    "triangledown;" <> _ -> Ok(#(list.drop(input, 13), "\u{25BF}"))
    "triangleleft;" <> _ -> Ok(#(list.drop(input, 13), "\u{25C3}"))
    "trianglelefteq;" <> _ -> Ok(#(list.drop(input, 15), "\u{22B4}"))
    "triangleq;" <> _ -> Ok(#(list.drop(input, 10), "\u{225C}"))
    "triangleright;" <> _ -> Ok(#(list.drop(input, 14), "\u{25B9}"))
    "trianglerighteq;" <> _ -> Ok(#(list.drop(input, 16), "\u{22B5}"))
    "tridot;" <> _ -> Ok(#(list.drop(input, 7), "\u{25EC}"))
    "trie;" <> _ -> Ok(#(list.drop(input, 5), "\u{225C}"))
    "triminus;" <> _ -> Ok(#(list.drop(input, 9), "\u{2A3A}"))
    "triplus;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A39}"))
    "trisb;" <> _ -> Ok(#(list.drop(input, 6), "\u{29CD}"))
    "tritime;" <> _ -> Ok(#(list.drop(input, 8), "\u{2A3B}"))
    "trpezium;" <> _ -> Ok(#(list.drop(input, 9), "\u{23E2}"))
    "tscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4C9}"))
    "tscy;" <> _ -> Ok(#(list.drop(input, 5), "\u{446}"))
    "tshcy;" <> _ -> Ok(#(list.drop(input, 6), "\u{45B}"))
    "tstrok;" <> _ -> Ok(#(list.drop(input, 7), "\u{167}"))
    "twixt;" <> _ -> Ok(#(list.drop(input, 6), "\u{226C}"))
    "twoheadleftarrow;" <> _ -> Ok(#(list.drop(input, 17), "\u{219E}"))
    "twoheadrightarrow;" <> _ -> Ok(#(list.drop(input, 18), "\u{21A0}"))
    _ -> Error(Nil)
  }
}

fn match_u(entity: String, input: List(String)) {
  case entity {
    "uArr;" <> _ -> Ok(#(list.drop(input, 5), "\u{21D1}"))
    "uHar;" <> _ -> Ok(#(list.drop(input, 5), "\u{2963}"))
    "uacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{FA}"))
    "uarr;" <> _ -> Ok(#(list.drop(input, 5), "\u{2191}"))
    "ubrcy;" <> _ -> Ok(#(list.drop(input, 6), "\u{45E}"))
    "ubreve;" <> _ -> Ok(#(list.drop(input, 7), "\u{16D}"))
    "ucirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{FB}"))
    "ucy;" <> _ -> Ok(#(list.drop(input, 4), "\u{443}"))
    "udarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21C5}"))
    "udblac;" <> _ -> Ok(#(list.drop(input, 7), "\u{171}"))
    "udhar;" <> _ -> Ok(#(list.drop(input, 6), "\u{296E}"))
    "ufisht;" <> _ -> Ok(#(list.drop(input, 7), "\u{297E}"))
    "ufr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D532}"))
    "ugrave;" <> _ -> Ok(#(list.drop(input, 7), "\u{F9}"))
    "uharl;" <> _ -> Ok(#(list.drop(input, 6), "\u{21BF}"))
    "uharr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21BE}"))
    "uhblk;" <> _ -> Ok(#(list.drop(input, 6), "\u{2580}"))
    "ulcorn;" <> _ -> Ok(#(list.drop(input, 7), "\u{231C}"))
    "ulcorner;" <> _ -> Ok(#(list.drop(input, 9), "\u{231C}"))
    "ulcrop;" <> _ -> Ok(#(list.drop(input, 7), "\u{230F}"))
    "ultri;" <> _ -> Ok(#(list.drop(input, 6), "\u{25F8}"))
    "umacr;" <> _ -> Ok(#(list.drop(input, 6), "\u{16B}"))
    "uml;" <> _ -> Ok(#(list.drop(input, 4), "\u{A8}"))
    "uogon;" <> _ -> Ok(#(list.drop(input, 6), "\u{173}"))
    "uopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D566}"))
    "uparrow;" <> _ -> Ok(#(list.drop(input, 8), "\u{2191}"))
    "updownarrow;" <> _ -> Ok(#(list.drop(input, 12), "\u{2195}"))
    "upharpoonleft;" <> _ -> Ok(#(list.drop(input, 14), "\u{21BF}"))
    "upharpoonright;" <> _ -> Ok(#(list.drop(input, 15), "\u{21BE}"))
    "uplus;" <> _ -> Ok(#(list.drop(input, 6), "\u{228E}"))
    "upsi;" <> _ -> Ok(#(list.drop(input, 5), "\u{3C5}"))
    "upsih;" <> _ -> Ok(#(list.drop(input, 6), "\u{3D2}"))
    "upsilon;" <> _ -> Ok(#(list.drop(input, 8), "\u{3C5}"))
    "upuparrows;" <> _ -> Ok(#(list.drop(input, 11), "\u{21C8}"))
    "urcorn;" <> _ -> Ok(#(list.drop(input, 7), "\u{231D}"))
    "urcorner;" <> _ -> Ok(#(list.drop(input, 9), "\u{231D}"))
    "urcrop;" <> _ -> Ok(#(list.drop(input, 7), "\u{230E}"))
    "uring;" <> _ -> Ok(#(list.drop(input, 6), "\u{16F}"))
    "urtri;" <> _ -> Ok(#(list.drop(input, 6), "\u{25F9}"))
    "uscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4CA}"))
    "utdot;" <> _ -> Ok(#(list.drop(input, 6), "\u{22F0}"))
    "utilde;" <> _ -> Ok(#(list.drop(input, 7), "\u{169}"))
    "utri;" <> _ -> Ok(#(list.drop(input, 5), "\u{25B5}"))
    "utrif;" <> _ -> Ok(#(list.drop(input, 6), "\u{25B4}"))
    "uuarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{21C8}"))
    "uuml;" <> _ -> Ok(#(list.drop(input, 5), "\u{FC}"))
    "uwangle;" <> _ -> Ok(#(list.drop(input, 8), "\u{29A7}"))
    _ -> Error(Nil)
  }
}

fn match_v(entity: String, input: List(String)) {
  case entity {
    "vArr;" <> _ -> Ok(#(list.drop(input, 5), "\u{21D5}"))
    "vBar;" <> _ -> Ok(#(list.drop(input, 5), "\u{2AE8}"))
    "vBarv;" <> _ -> Ok(#(list.drop(input, 6), "\u{2AE9}"))
    "vDash;" <> _ -> Ok(#(list.drop(input, 6), "\u{22A8}"))
    "vangrt;" <> _ -> Ok(#(list.drop(input, 7), "\u{299C}"))
    "varepsilon;" <> _ -> Ok(#(list.drop(input, 11), "\u{3F5}"))
    "varkappa;" <> _ -> Ok(#(list.drop(input, 9), "\u{3F0}"))
    "varnothing;" <> _ -> Ok(#(list.drop(input, 11), "\u{2205}"))
    "varphi;" <> _ -> Ok(#(list.drop(input, 7), "\u{3D5}"))
    "varpi;" <> _ -> Ok(#(list.drop(input, 6), "\u{3D6}"))
    "varpropto;" <> _ -> Ok(#(list.drop(input, 10), "\u{221D}"))
    "varr;" <> _ -> Ok(#(list.drop(input, 5), "\u{2195}"))
    "varrho;" <> _ -> Ok(#(list.drop(input, 7), "\u{3F1}"))
    "varsigma;" <> _ -> Ok(#(list.drop(input, 9), "\u{3C2}"))
    "varsubsetneq;" <> _ -> Ok(#(list.drop(input, 13), "\u{228A}\u{FE00}"))
    "varsubsetneqq;" <> _ -> Ok(#(list.drop(input, 14), "\u{2ACB}\u{FE00}"))
    "varsupsetneq;" <> _ -> Ok(#(list.drop(input, 13), "\u{228B}\u{FE00}"))
    "varsupsetneqq;" <> _ -> Ok(#(list.drop(input, 14), "\u{2ACC}\u{FE00}"))
    "vartheta;" <> _ -> Ok(#(list.drop(input, 9), "\u{3D1}"))
    "vartriangleleft;" <> _ -> Ok(#(list.drop(input, 16), "\u{22B2}"))
    "vartriangleright;" <> _ -> Ok(#(list.drop(input, 17), "\u{22B3}"))
    "vcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{432}"))
    "vdash;" <> _ -> Ok(#(list.drop(input, 6), "\u{22A2}"))
    "vee;" <> _ -> Ok(#(list.drop(input, 4), "\u{2228}"))
    "veebar;" <> _ -> Ok(#(list.drop(input, 7), "\u{22BB}"))
    "veeeq;" <> _ -> Ok(#(list.drop(input, 6), "\u{225A}"))
    "vellip;" <> _ -> Ok(#(list.drop(input, 7), "\u{22EE}"))
    "verbar;" <> _ -> Ok(#(list.drop(input, 7), "\u{7C}"))
    "vert;" <> _ -> Ok(#(list.drop(input, 5), "\u{7C}"))
    "vfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D533}"))
    "vltri;" <> _ -> Ok(#(list.drop(input, 6), "\u{22B2}"))
    "vnsub;" <> _ -> Ok(#(list.drop(input, 6), "\u{2282}\u{20D2}"))
    "vnsup;" <> _ -> Ok(#(list.drop(input, 6), "\u{2283}\u{20D2}"))
    "vopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D567}"))
    "vprop;" <> _ -> Ok(#(list.drop(input, 6), "\u{221D}"))
    "vrtri;" <> _ -> Ok(#(list.drop(input, 6), "\u{22B3}"))
    "vscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4CB}"))
    "vsubnE;" <> _ -> Ok(#(list.drop(input, 7), "\u{2ACB}\u{FE00}"))
    "vsubne;" <> _ -> Ok(#(list.drop(input, 7), "\u{228A}\u{FE00}"))
    "vsupnE;" <> _ -> Ok(#(list.drop(input, 7), "\u{2ACC}\u{FE00}"))
    "vsupne;" <> _ -> Ok(#(list.drop(input, 7), "\u{228B}\u{FE00}"))
    "vzigzag;" <> _ -> Ok(#(list.drop(input, 8), "\u{299A}"))
    _ -> Error(Nil)
  }
}

fn match_w(entity: String, input: List(String)) {
  case entity {
    "wcirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{175}"))
    "wedbar;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A5F}"))
    "wedge;" <> _ -> Ok(#(list.drop(input, 6), "\u{2227}"))
    "wedgeq;" <> _ -> Ok(#(list.drop(input, 7), "\u{2259}"))
    "weierp;" <> _ -> Ok(#(list.drop(input, 7), "\u{2118}"))
    "wfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D534}"))
    "wopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D568}"))
    "wp;" <> _ -> Ok(#(list.drop(input, 3), "\u{2118}"))
    "wr;" <> _ -> Ok(#(list.drop(input, 3), "\u{2240}"))
    "wreath;" <> _ -> Ok(#(list.drop(input, 7), "\u{2240}"))
    "wscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4CC}"))
    _ -> Error(Nil)
  }
}

fn match_x(entity: String, input: List(String)) {
  case entity {
    "xcap;" <> _ -> Ok(#(list.drop(input, 5), "\u{22C2}"))
    "xcirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{25EF}"))
    "xcup;" <> _ -> Ok(#(list.drop(input, 5), "\u{22C3}"))
    "xdtri;" <> _ -> Ok(#(list.drop(input, 6), "\u{25BD}"))
    "xfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D535}"))
    "xhArr;" <> _ -> Ok(#(list.drop(input, 6), "\u{27FA}"))
    "xharr;" <> _ -> Ok(#(list.drop(input, 6), "\u{27F7}"))
    "xi;" <> _ -> Ok(#(list.drop(input, 3), "\u{3BE}"))
    "xlArr;" <> _ -> Ok(#(list.drop(input, 6), "\u{27F8}"))
    "xlarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{27F5}"))
    "xmap;" <> _ -> Ok(#(list.drop(input, 5), "\u{27FC}"))
    "xnis;" <> _ -> Ok(#(list.drop(input, 5), "\u{22FB}"))
    "xodot;" <> _ -> Ok(#(list.drop(input, 6), "\u{2A00}"))
    "xopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D569}"))
    "xoplus;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A01}"))
    "xotime;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A02}"))
    "xrArr;" <> _ -> Ok(#(list.drop(input, 6), "\u{27F9}"))
    "xrarr;" <> _ -> Ok(#(list.drop(input, 6), "\u{27F6}"))
    "xscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4CD}"))
    "xsqcup;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A06}"))
    "xuplus;" <> _ -> Ok(#(list.drop(input, 7), "\u{2A04}"))
    "xutri;" <> _ -> Ok(#(list.drop(input, 6), "\u{25B3}"))
    "xvee;" <> _ -> Ok(#(list.drop(input, 5), "\u{22C1}"))
    "xwedge;" <> _ -> Ok(#(list.drop(input, 7), "\u{22C0}"))
    _ -> Error(Nil)
  }
}

fn match_y(entity: String, input: List(String)) {
  case entity {
    "yacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{FD}"))
    "yacy;" <> _ -> Ok(#(list.drop(input, 5), "\u{44F}"))
    "ycirc;" <> _ -> Ok(#(list.drop(input, 6), "\u{177}"))
    "ycy;" <> _ -> Ok(#(list.drop(input, 4), "\u{44B}"))
    "yen;" <> _ -> Ok(#(list.drop(input, 4), "\u{A5}"))
    "yfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D536}"))
    "yicy;" <> _ -> Ok(#(list.drop(input, 5), "\u{457}"))
    "yopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D56A}"))
    "yscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4CE}"))
    "yucy;" <> _ -> Ok(#(list.drop(input, 5), "\u{44E}"))
    "yuml;" <> _ -> Ok(#(list.drop(input, 5), "\u{FF}"))
    _ -> Error(Nil)
  }
}

fn match_z(entity: String, input: List(String)) {
  case entity {
    "zacute;" <> _ -> Ok(#(list.drop(input, 7), "\u{17A}"))
    "zcaron;" <> _ -> Ok(#(list.drop(input, 7), "\u{17E}"))
    "zcy;" <> _ -> Ok(#(list.drop(input, 4), "\u{437}"))
    "zdot;" <> _ -> Ok(#(list.drop(input, 5), "\u{17C}"))
    "zeetrf;" <> _ -> Ok(#(list.drop(input, 7), "\u{2128}"))
    "zeta;" <> _ -> Ok(#(list.drop(input, 5), "\u{3B6}"))
    "zfr;" <> _ -> Ok(#(list.drop(input, 4), "\u{1D537}"))
    "zhcy;" <> _ -> Ok(#(list.drop(input, 5), "\u{436}"))
    "zigrarr;" <> _ -> Ok(#(list.drop(input, 8), "\u{21DD}"))
    "zopf;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D56B}"))
    "zscr;" <> _ -> Ok(#(list.drop(input, 5), "\u{1D4CF}"))
    "zwj;" <> _ -> Ok(#(list.drop(input, 4), "\u{200D}"))
    "zwnj;" <> _ -> Ok(#(list.drop(input, 5), "\u{200C}"))
    _ -> Error(Nil)
  }
}
